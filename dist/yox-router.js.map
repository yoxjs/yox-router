{"version":3,"file":"yox-router.js","sources":["../../yox-common/src/util/env.ts","../src/Hooks.ts","../src/constant.ts","../src/value.ts","../src/query.ts","../src/location.ts","../src/index.ts"],"sourcesContent":["/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\nexport const RAW_MINUS_ONE = -1\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''","import Task from '../../yox-type/src/interface/Task'\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport { Router } from './index'\n\nimport * as type from './type'\n\nexport default class Hooks {\n\n  name: string\n\n  list: Task[]\n\n  to: type.Location\n\n  from: type.Location | void\n\n  setLocation(to: type.Location, from: type.Location | void) {\n    this.to = to\n    this.from = from\n    return this\n  }\n\n  setName(name: string) {\n    this.name = name\n    this.list = []\n    return this\n  }\n\n  add(target: YoxOptions | type.RouteOptions | Router, ctx: any) {\n    const { name, list } = this\n    if (target[name]) {\n      list.push({\n        fn: target[name],\n        ctx,\n      })\n    }\n    return this\n  }\n\n  next(next: type.Next, isGuard?: boolean, callback?: type.Callback) {\n    const task = this.list.shift()\n    if (task) {\n      if (isGuard) {\n        task.fn.call(task.ctx, this.to, this.from, next)\n      }\n      else {\n        task.fn.call(task.ctx, this.to, this.from)\n        next()\n      }\n    }\n    else if (callback) {\n      callback()\n    }\n  }\n\n}","// hash 前缀，Google 的规范是 #! 开头，如 #!/path/sub?key=value\nexport const PREFIX_HASH = '#!'\n\n// path 中的参数前缀，如 #!/user/:userId\nexport const PREFIX_PARAM = ':'\n\n// path 分隔符\nexport const SEPARATOR_PATH = '/'\n\n// path 和 search 的分隔符\nexport const SEPARATOR_SEARCH = '?'\n\n// query 分隔符\nexport const SEPARATOR_QUERY = '&'\n\n// 键值对分隔符\nexport const SEPARATOR_PAIR = '='\n\n// 参数中的数组标识\nexport const FLAG_ARRAY = '[]'\n\n// 导航钩子 - 路由进入之前\nexport const HOOK_BEFORE_ENTER = 'beforeEnter'\n\n// 导航钩子 - 路由进入之后\nexport const HOOK_AFTER_ENTER = 'afterEnter'\n\n// 导航钩子 - 路由离开之前\nexport const HOOK_BEFORE_LEAVE = 'beforeLeave'\n\n// 导航钩子 - 路由离开之后\nexport const HOOK_AFTER_LEAVE = 'afterLeave'","import * as env from '../../yox-common/src/util/env'\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\n/**\n * 把字符串 value 解析成最合适的类型\n */\nexport function parse(Yox: YoxClass, value: string) {\n  let result: any\n  if (Yox.is.numeric(value)) {\n    result = +value\n  }\n  else if (Yox.is.string(value)) {\n    if (value === env.RAW_TRUE) {\n      result = env.TRUE\n    }\n    else if (value === env.RAW_FALSE) {\n      result = env.FALSE\n    }\n    else if (value === env.RAW_NULL) {\n      result = env.NULL\n    }\n    else if (value === env.RAW_UNDEFINED) {\n      result = env.UNDEFINED\n    }\n    else {\n      result = decodeURIComponent(value)\n    }\n  }\n  return result\n}\n\nexport function stringify(Yox: YoxClass, value: any): string {\n  if (Yox.is.string(value)) {\n    return encodeURIComponent(value)\n  }\n  else if (Yox.is.number(value) || Yox.is.boolean(value)) {\n    return value.toString()\n  }\n  else if (value === env.NULL) {\n    return env.RAW_NULL\n  }\n  return env.RAW_UNDEFINED\n}","\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\nimport * as constant from './constant'\nimport * as valueUtil from './value'\n\n/**\n * 把 GET 参数解析成对象\n */\nexport function parse(Yox: YoxClass, query: string) {\n  let result: Object | undefined\n  Yox.array.each(\n    query.split(constant.SEPARATOR_QUERY),\n    function (term) {\n\n      let terms = term.split(constant.SEPARATOR_PAIR),\n\n      key = Yox.string.trim(terms[0]),\n\n      value = terms[1]\n\n      if (key) {\n        if (!result) {\n          result = {}\n        }\n        value = valueUtil.parse(Yox, value)\n        if (Yox.string.endsWith(key, constant.FLAG_ARRAY)) {\n          key = Yox.string.slice(key, 0, -constant.FLAG_ARRAY.length)\n          Yox.array.push(\n            result[key] || (result[key] = []),\n            value\n          )\n        }\n        else {\n          result[key] = value\n        }\n      }\n\n    }\n  )\n  return result\n}\n\n/**\n * 把对象解析成 key1=value1&key2=value2\n */\nexport function stringify(Yox: YoxClass, query: Object) {\n  const result: string[] = []\n  for (let key in query) {\n    const value = query[key]\n    if (Yox.is.array(value)) {\n      Yox.array.each(\n        value,\n        function (value) {\n          result.push(\n            key + constant.FLAG_ARRAY + constant.SEPARATOR_PAIR + valueUtil.stringify(Yox, value)\n          )\n        }\n      )\n    }\n    else {\n      result.push(\n        key + constant.SEPARATOR_PAIR + valueUtil.stringify(Yox, value)\n      )\n    }\n  }\n  return result.join(constant.SEPARATOR_QUERY)\n}\n","import YoxClass from '../../yox-type/src/interface/YoxClass'\n\nimport * as type from './type'\nimport * as constant from './constant'\nimport * as valueUtil from './value'\nimport * as queryUtil from './query'\n\n/**\n * 解析 path 中的参数\n */\nfunction parseParams(Yox: YoxClass, path: string, realpath: string) {\n\n  let result: Object | undefined,\n\n  realpathTerms = realpath.split(constant.SEPARATOR_PATH),\n\n  pathTerms = path.split(constant.SEPARATOR_PATH)\n\n  if (realpathTerms.length === pathTerms.length) {\n    Yox.array.each(\n      pathTerms,\n      function (item, index) {\n        if (Yox.string.startsWith(item, constant.PREFIX_PARAM)) {\n          if (!result) {\n            result = {}\n          }\n          result[item.substr(constant.PREFIX_PARAM.length)] = valueUtil.parse(Yox, realpathTerms[index])\n        }\n      }\n    )\n  }\n\n  return result\n\n}\n\n/**\n * 通过 realpath 获取配置的路由\n */\nfunction getRouteByRealpath(Yox: YoxClass, routes: type.LinkedRoute[], realpath: string) {\n\n  let realpathTerms = realpath.split(constant.SEPARATOR_PATH),\n\n  length = realpathTerms.length,\n\n  i = 0,\n\n  route: type.LinkedRoute | void\n\n  loop: while (route = routes[i++]) {\n    if (route.params) {\n      const pathTerms = route.path.split(constant.SEPARATOR_PATH)\n      if (length === pathTerms.length) {\n        for (let l = 0; l < length; l++) {\n          // 非参数段不相同\n          if (!Yox.string.startsWith(pathTerms[l], constant.PREFIX_PARAM)\n            && pathTerms[l] !== realpathTerms[l]\n          ) {\n            continue loop\n          }\n        }\n        return route\n      }\n    }\n    else if (route.path === realpath) {\n      return route\n    }\n  }\n\n}\n\nexport function parse(Yox: YoxClass, routes: type.LinkedRoute[], hash: string) {\n\n  let realpath: string, search: string | void, index = hash.indexOf(constant.SEPARATOR_SEARCH)\n\n  if (index >= 0) {\n    realpath = hash.slice(0, index)\n    search = hash.slice(index + 1)\n  }\n  else {\n    realpath = hash\n  }\n\n  const route = getRouteByRealpath(Yox, routes, realpath)\n\n  if (route) {\n    const result: type.Location = {\n      hash,\n      path: route.path\n    }\n    if (route.params) {\n      const params = parseParams(Yox, route.path, realpath)\n      if (params) {\n        result.params = params\n      }\n    }\n    if (search) {\n      const query = queryUtil.parse(Yox, search)\n      if (query) {\n        result.query = query\n      }\n    }\n    return result\n  }\n\n}\n\n/**\n * 把结构化数据序列化成 hash\n */\nexport function stringify(Yox: YoxClass, location: type.Location) {\n\n  const { path, params, query } = location, terms: string[] = []\n\n  Yox.array.each(\n    path.split(constant.SEPARATOR_PATH),\n    function (item) {\n      terms.push(\n        Yox.string.startsWith(item, constant.PREFIX_PARAM) && params\n          ? params[item.substr(constant.PREFIX_PARAM.length)]\n          : item\n      )\n    }\n  )\n\n  let realpath = terms.join(constant.SEPARATOR_PATH)\n\n  if (query) {\n    const queryStr = queryUtil.stringify(Yox, query)\n    if (queryStr) {\n      realpath += constant.SEPARATOR_SEARCH + queryStr\n    }\n  }\n\n  return realpath\n\n}","import * as type from '../../yox-type/src/type'\n\nimport * as env from '../../yox-common/src/util/env'\n\nimport API from '../../yox-type/src/interface/API'\nimport Yox from '../../yox-type/src/interface/Yox'\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Directive from '../../yox-type/src/vnode/Directive'\nimport CustomEvent from '../../yox-type/src/event/CustomEvent'\n\nimport Hooks from './Hooks'\nimport * as constant from './constant'\nimport * as typeUtil from './type'\nimport * as locationUtil from './location'\n\nlet Yox: YoxClass, domApi: API, guid = 0\n\nconst WINDOW = window,\n\nLOCATION = WINDOW.location,\n\nROUTER = '$router',\n\nROUTE = '$route',\n\nROUTE_VIEW = '$routeView',\n\nROUTE_COMPONENT = 'RouteComponent',\n\nEVENT_CLICK = 'click',\n\nEVENT_HASH_CHANGE = 'hashchange'\n\n/**\n * 格式化路径，确保它以 / 开头，不以 / 结尾\n */\nfunction formatPath(path: string, parentPath: string | void) {\n\n  // 如果 path 以 / 结尾，删掉它\n  // 比如 { path: 'index/' }\n  if (path !== constant.SEPARATOR_PATH\n    && Yox.string.endsWith(path, constant.SEPARATOR_PATH)\n  ) {\n    path = Yox.string.slice(path, 0, -1)\n  }\n\n  // 如果 path 不是以 / 开头，有两种情况：\n  // 1. 没有上级或上级是 ''，需要自动加 / 前缀\n  // 2. 相对上级的路径，自动替换最后一个 / 后面的路径\n  if (!Yox.string.startsWith(path, constant.SEPARATOR_PATH)) {\n\n    if (path) {\n      if (Yox.string.falsy(parentPath)) {\n        path = constant.SEPARATOR_PATH + path\n      }\n      else {\n        path = parentPath + constant.SEPARATOR_PATH + path\n      }\n    }\n    else if (parentPath) {\n      path = parentPath\n    }\n\n  }\n\n  return path\n}\n\nfunction toLocation(target: typeUtil.Target, name2Path: type.data): typeUtil.Location {\n\n  const location: typeUtil.Location = {\n    hash: env.EMPTY_STRING,\n    path: env.EMPTY_STRING\n  }\n\n  if (Yox.is.string(target)) {\n    location.path = formatPath(target as string)\n  }\n  else {\n    const route = target as typeUtil.RouteTarget, name = route.name\n    if (name) {\n      location.path = name2Path[name]\n      if (process.env.NODE_ENV === 'development') {\n        if (!Yox.is.string(location.path)) {\n          Yox.logger.error(`The route of name[${name}] is not found.`)\n        }\n      }\n    }\n    else {\n      location.path = formatPath(route.path as string)\n    }\n    if (route.params) {\n      location.params = route.params\n    }\n    if (route.query) {\n      location.query = route.query\n    }\n  }\n\n  return location\n\n}\n\n/**\n * 按照 propTypes 定义的外部数据格式过滤路由参数，这样有两个好处：\n *\n * 1. 避免传入不符预期的数据\n * 2. 避免覆盖 data 定义的数据\n */\nfunction filterProps(route: typeUtil.LinkedRoute, location: typeUtil.Location, options: YoxOptions) {\n  const result: type.data = {}, propTypes = options.propTypes\n  if (propTypes) {\n\n    let props = location.query,\n\n    routeParams = route.params,\n\n    locationParams = location.params\n\n    // 从 location.params 挑出 route.params 定义过的参数\n    if (routeParams && locationParams) {\n      props = props ? Yox.object.copy(props) : {}\n      for (let i = 0, key: string; key = routeParams[i]; i++) {\n        (props as type.data)[key] = locationParams[key]\n      }\n    }\n\n    if (props) {\n      for (let key in propTypes) {\n        result[key] = Yox.checkProp(key, props[key], propTypes[key])\n      }\n    }\n\n  }\n  return result\n}\n\n/**\n * 是否是叶子节点\n * 如果把叶子节点放在 if 中，会出现即使不是定义时的叶子节点，却是运行时的叶子节点\n */\nfunction isLeafRoute(route: typeUtil.LinkedRoute) {\n  const child = route.child\n  return !child || !child.context\n}\n\nfunction updateRoute(instance: Yox, hook: string | undefined, upsert?: boolean) {\n  const route = instance[ROUTE] as typeUtil.LinkedRoute\n  if (route) {\n    route.context = upsert ? instance : env.UNDEFINED\n    if (isLeafRoute(route)) {\n      const router = instance[ROUTER] as Router\n      if (hook) {\n        router.hook(route, hook)\n      }\n      if (upsert && router.loading) {\n        router.loading.onComplete()\n        router.loading = env.UNDEFINED\n      }\n    }\n  }\n}\n\nexport class Router {\n\n  el: Element\n\n  routes: typeUtil.LinkedRoute[]\n\n  route404: typeUtil.LinkedRoute\n\n  name2Path: Record<string, string>\n\n  path2Route: Record<string, typeUtil.LinkedRoute>\n\n  history: typeUtil.Location[]\n\n  cursor: number\n\n  loading: typeUtil.Loading | void\n\n  hooks: Hooks\n\n  // 路由或参数发生了变化会触发此函数\n  onHashChange: Function\n\n  // 当前渲染的路由\n  route?: typeUtil.LinkedRoute\n\n  // 当前地址栏的路径和参数\n  location?: typeUtil.Location\n\n  [constant.HOOK_BEFORE_LEAVE]?: typeUtil.BeforeHook\n\n  [constant.HOOK_BEFORE_ENTER]?: typeUtil.BeforeHook\n\n  [constant.HOOK_AFTER_ENTER]?: typeUtil.AfterHook\n\n  [constant.HOOK_AFTER_LEAVE]?: typeUtil.AfterHook\n\n  constructor(options: typeUtil.RouterOptions) {\n\n    const instance = this, { el, route404 } = options\n\n    instance.el = Yox.is.string(el)\n      ? domApi.find(el as string) as Element\n      : el as Element\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!instance.el) {\n        Yox.logger.error(`router.el is not an element.`)\n        return\n      }\n      if (!route404) {\n        Yox.logger.error(`Route for 404 is required.`)\n        return\n      }\n    }\n\n    /**\n     * hashchange 事件处理函数\n     * 此函数必须写在实例上，不能写在类上\n     * 否则一旦解绑，所有实例都解绑了\n     */\n    instance.onHashChange = function () {\n\n      let hashStr = LOCATION.hash, { loading, routes, route404 } = instance\n\n      // 如果不以 PREFIX_HASH 开头，表示不合法\n      hashStr = hashStr !== constant.PREFIX_HASH\n        && Yox.string.startsWith(hashStr, constant.PREFIX_HASH)\n        ? hashStr.substr(constant.PREFIX_HASH.length)\n        : constant.SEPARATOR_PATH\n\n      if (loading) {\n        // 通过 push 或 go 触发\n        if (loading.location.hash === hashStr) {\n          instance.setRoute(loading.location)\n          return\n        }\n        instance.loading = env.UNDEFINED\n      }\n\n      // 直接修改地址栏触发\n      const location = locationUtil.parse(Yox, routes, hashStr)\n      if (location) {\n        instance.pushHistory(location)\n        instance.setRoute(location)\n        return\n      }\n\n      instance.push(route404)\n\n    }\n\n    instance.routes = []\n    instance.name2Path = {}\n    instance.path2Route = {}\n\n    instance.history = []\n    instance.cursor = -1\n\n    instance.hooks = new Hooks()\n\n    instance.add(options.routes)\n    instance.add([route404])\n\n    instance.route404 = Yox.array.last(instance.routes) as typeUtil.LinkedRoute\n\n  }\n\n  /**\n   * 添加新的路由\n   */\n  add(routes: typeUtil.RouteOptions[]) {\n\n    let instance = this,\n\n    pathStack: string[] = [],\n\n    routeStack: typeUtil.LinkedRoute[] = [],\n\n    callback = function (routeOptions: typeUtil.RouteOptions) {\n\n      let { name, component, children } = routeOptions,\n\n      parentPath = Yox.array.last(pathStack),\n\n      parentRoute = Yox.array.last(routeStack),\n\n      path = formatPath(routeOptions.path, parentPath),\n\n      route: typeUtil.LinkedRoute = { path, component, route: routeOptions },\n\n      params: string[] = []\n\n      Yox.array.each(\n        path.split(constant.SEPARATOR_PATH),\n        function (item) {\n          if (Yox.string.startsWith(item, constant.PREFIX_PARAM)) {\n            params.push(\n              item.substr(constant.PREFIX_PARAM.length)\n            )\n          }\n        }\n      )\n\n      if (params.length) {\n        route.params = params\n      }\n\n      if (parentRoute) {\n        route.parent = parentRoute\n      }\n\n      if (children) {\n        pathStack.push(path)\n        routeStack.push(route)\n        Yox.array.each(\n          children,\n          callback\n        )\n        routeStack.pop()\n        pathStack.pop()\n      }\n      else {\n\n        instance.routes.push(route)\n\n        if (name) {\n          if (process.env.NODE_ENV === 'development') {\n            if (Yox.object.has(instance.name2Path, name)) {\n              Yox.logger.error(`Name[${name}] of the route is existed.`)\n              return\n            }\n          }\n          instance.name2Path[name] = path\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          if (Yox.object.has(instance.path2Route, path)) {\n            Yox.logger.error(`path [${path}] of the route is existed.`)\n            return\n          }\n        }\n\n        instance.path2Route[path] = route\n\n      }\n\n    }\n\n    Yox.array.each(\n      routes,\n      callback\n    )\n\n  }\n\n  /**\n   * 真正执行路由切换操作的函数\n   *\n   * target 有 2 种格式：\n   *\n   * 如果只是简单的 path，直接传字符串\n   *\n   * push('/index')\n   *\n   * 如果需要带参数，可传对象\n   *\n   * push({\n   *   path: '/index',\n   *   params: { },\n   *   query: { }\n   * })\n   *\n   * 如果路由配置了 name，可用 name 代替 path，如下：\n   *\n   * push({\n   *   name: 'index'\n   * })\n   *\n   */\n  push(target: typeUtil.Target) {\n\n    const instance = this,\n\n    location = instance.setLocation(\n      toLocation(target, instance.name2Path),\n      function () {\n        instance.pushHistory(location as typeUtil.Location)\n      },\n      env.EMPTY_FUNCTION\n    )\n\n    if (location) {\n      instance.setHash(location)\n    }\n\n  }\n\n  replace(target: typeUtil.Target) {\n\n    const instance = this,\n\n    location = instance.setLocation(\n      toLocation(target, instance.name2Path),\n      function () {\n        const history = instance.history, cursor = instance.cursor\n        if (history[cursor]) {\n          history[cursor] = location as typeUtil.Location\n        }\n      },\n      env.EMPTY_FUNCTION\n    )\n\n    if (location) {\n      instance.setRoute(location)\n    }\n\n  }\n\n  go(offset: number) {\n\n    let instance = this,\n\n    cursor = instance.cursor + offset,\n\n    location: typeUtil.Location | void = instance.history[cursor]\n\n    if (location) {\n      location = instance.setLocation(\n        location,\n        function () {\n          instance.cursor = cursor\n        },\n        env.EMPTY_FUNCTION\n      )\n      if (location) {\n        instance.setHash(location)\n      }\n    }\n\n  }\n\n  /**\n   * 启动路由\n   */\n  start() {\n    domApi.on(WINDOW, EVENT_HASH_CHANGE, this.onHashChange as type.listener)\n    this.onHashChange()\n  }\n\n  /**\n   * 停止路由\n   */\n  stop() {\n    domApi.off(WINDOW, EVENT_HASH_CHANGE, this.onHashChange as type.listener)\n  }\n\n  /**\n   * 钩子函数\n   */\n  hook(route: typeUtil.LinkedRoute, name: string, isGuard?: boolean, callback?: typeUtil.Callback) {\n\n    const instance = this, { location, hooks, loading } = instance, { to, from } = hooks\n\n    if (!from || from.path !== to.path) {\n\n      hooks\n        .setName(name)\n        // 先调用组件的钩子\n        .add(route.component, route.context)\n        // 再调用路由配置的钩子\n        .add(route.route, route.route)\n        // 最后调用路由实例的钩子\n        .add(instance, instance)\n\n      const next = function (value?: false | typeUtil.Target) {\n        if (value === env.UNDEFINED) {\n          hooks.next(next, isGuard, callback)\n        }\n        else {\n          // 只有前置守卫才有可能走进这里\n          // 此时 instance.location 还是旧地址\n          if (loading) {\n            loading.onAbort()\n            instance.loading = env.UNDEFINED\n          }\n          if (value === env.FALSE) {\n            if (location) {\n              instance.replace(location)\n            }\n          }\n          else {\n            // 跳转到别的路由\n            instance.push(value)\n          }\n        }\n      }\n\n      next()\n\n    }\n    else if (callback) {\n      callback()\n    }\n\n  }\n\n  private pushHistory(location: typeUtil.Location) {\n    let { history, cursor } = this\n    cursor++\n    // 确保下一个为空\n    // 如果不为空，肯定是调用过 go()，此时直接清掉后面的就行了\n    if (history[cursor]) {\n      history.length = cursor\n    }\n    history[cursor] = location\n    this.cursor = cursor\n  }\n\n  private setHash(location: typeUtil.Location) {\n\n    const hash = constant.PREFIX_HASH + location.hash\n    if (LOCATION.hash !== hash) {\n      LOCATION.hash = hash\n    }\n    else {\n      this.setRoute(location)\n    }\n\n  }\n\n  private setLocation(\n    location: typeUtil.Location,\n    onComplete: typeUtil.RouteComplete,\n    onAbort: typeUtil.RouteAbort\n  ) {\n\n    let instance = this,\n\n    hash = locationUtil.stringify(Yox, location),\n\n    oldLocation = instance.location,\n\n    oldHash = oldLocation ? locationUtil.stringify(Yox, oldLocation) : env.UNDEFINED,\n\n    checkExisted = locationUtil.parse(Yox, instance.routes, hash)\n\n    if (checkExisted) {\n      location = checkExisted\n    }\n    else {\n      hash = instance.route404.path\n      location = {\n        hash,\n        path: hash\n      }\n    }\n\n    if (hash !== oldHash) {\n      instance.loading = {\n        location,\n        onComplete,\n        onAbort,\n      }\n      return location\n    }\n\n  }\n\n  private diffRoute(\n    route: typeUtil.LinkedRoute,\n    oldRoute: typeUtil.LinkedRoute | void,\n    onComplete: typeUtil.DiffComplete,\n    startRoute: typeUtil.LinkedRoute | void,\n    childRoute: typeUtil.LinkedRoute | void,\n    oldTopRoute: typeUtil.LinkedRoute | void\n  ) {\n\n    // 更新链路\n    if (childRoute) {\n      route.child = childRoute\n      childRoute.parent = route\n    }\n\n    if (oldRoute) {\n      // 同级的两个组件不同，疑似起始更新的路由\n      if (oldRoute.component !== route.component) {\n        startRoute = route\n      }\n      else {\n        // 把上次的组件实例搞过来\n        route.context = oldRoute.context\n      }\n    }\n    else {\n      startRoute = route\n    }\n\n    if (route.parent) {\n      this.diffRoute(\n        Yox.object.copy(route.parent),\n        oldRoute ? oldRoute.parent : env.UNDEFINED,\n        onComplete,\n        startRoute,\n        route,\n        oldRoute || oldTopRoute\n      )\n      return\n    }\n\n    // 整个组件树全换掉\n    if (startRoute === route) {\n      let context: Yox | void\n      // 当层级较多的路由切换到层级较少的路由\n      if (oldRoute) {\n        while (oldRoute) {\n          context = oldRoute.context\n          oldRoute = oldRoute.parent\n        }\n      }\n      // 当层级较少的路由切换到层级较多的路由\n      else if (oldTopRoute) {\n        context = oldTopRoute.context\n      }\n      if (context) {\n        startRoute.context = context\n      }\n    }\n\n    // 到达根组件，结束\n    onComplete(route, startRoute)\n\n  }\n\n  private updateRoute(\n    route: typeUtil.LinkedRoute,\n    startRoute: typeUtil.LinkedRoute | void\n  ) {\n\n    const instance = this, location = instance.location as typeUtil.Location\n\n    // 从上往下更新 props\n    while (route) {\n\n      let { parent, context, component } = route\n\n      if (route === startRoute) {\n\n        if (parent) {\n\n          context = parent.context as Yox\n          context.forceUpdate(\n            filterProps(\n              parent,\n              location,\n              parent.component\n            )\n          )\n\n          context = context[ROUTE_VIEW]\n          if (context) {\n            const props = {}, name = ROUTE_COMPONENT + (++guid)\n            props[ROUTE_COMPONENT] = name\n            context.component(name, component)\n            context.forceUpdate(props)\n          }\n\n        }\n        else {\n\n          if (context) {\n            context.destroy()\n          }\n\n          // 每层路由组件都有 $route 和 $router 属性\n          const extensions = {}\n          extensions[ROUTER] = instance\n          extensions[ROUTE] = route\n\n          route.context = new Yox(\n            Yox.object.extend(\n              {\n                el: instance.el,\n                props: filterProps(route, location, component),\n                extensions,\n              },\n              component\n            )\n          )\n\n        }\n\n      }\n\n      else if (context) {\n        if (context.$vnode) {\n          context[ROUTE] = route\n          context.forceUpdate(\n            filterProps(route, location, component)\n          )\n        }\n        else {\n          route.context = env.UNDEFINED\n        }\n        if (route.child) {\n          route = route.child as typeUtil.LinkedRoute\n          continue\n        }\n      }\n      break\n    }\n  }\n\n  private setRoute(location: typeUtil.Location) {\n\n    const instance = this,\n\n    newRoute = Yox.object.copy(instance.path2Route[location.path]),\n\n    oldRoute = instance.route,\n\n    enterRoute = function () {\n      instance.diffRoute(\n        newRoute,\n        oldRoute,\n        function (route, startRoute) {\n          instance.hook(\n            newRoute,\n            constant.HOOK_BEFORE_ENTER,\n            env.TRUE,\n            function () {\n\n              instance.route = newRoute\n              instance.location = location\n\n              instance.updateRoute(route, startRoute)\n\n            }\n          )\n        }\n      )\n    }\n\n    instance.hooks.setLocation(location, instance.location)\n\n    if (oldRoute) {\n      instance.hook(\n        oldRoute,\n        constant.HOOK_BEFORE_LEAVE,\n        env.TRUE,\n        enterRoute\n      )\n    }\n    else {\n      enterRoute()\n    }\n\n  }\n\n}\n\nconst directive = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // 当前组件如果是根组件，则没有 $root 属性\n    const $root = vnode.context.$root || vnode.context,\n\n    router = $root[ROUTER] as Router,\n\n    listener = vnode.data[directive.key] = function (_: CustomEvent) {\n      let { value, getter } = directive, target: any = value\n      if (value && getter && Yox.string.has(value as string, '{')) {\n        target = getter()\n      }\n      router[directive.name](target)\n    }\n\n    if (vnode.isComponent) {\n      (node as Yox).on(EVENT_CLICK, listener)\n    }\n    else {\n      domApi.on(node as HTMLElement, EVENT_CLICK, listener)\n    }\n\n  },\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    const listener = vnode.data[directive.key]\n    if (vnode.isComponent) {\n      (node as Yox).off(EVENT_CLICK, listener)\n    }\n    else {\n      domApi.off(node as HTMLElement, EVENT_CLICK, listener)\n    }\n  },\n},\n\nRouterView: YoxOptions = {\n  template: '<$' + ROUTE_COMPONENT + '/>',\n  beforeCreate(options) {\n\n    const $parent = options.parent as Yox,\n\n    route = $parent[ROUTE].child as typeUtil.LinkedRoute\n\n    if (route) {\n\n      $parent[ROUTE_VIEW] = this\n\n      const props = {}, components = {}, name = ROUTE_COMPONENT + (++guid)\n\n      props[ROUTE_COMPONENT] = name\n      components[name] = route.component\n\n      options.props = props\n      options.components = components\n\n    }\n\n  },\n  beforeDestroy() {\n    this.$parent[ROUTE_VIEW] = env.UNDEFINED\n  }\n}\n\n/**\n * 版本\n */\nexport const version = process.env.NODE_VERSION\n\n/**\n * 安装插件\n */\nexport function install(Class: YoxClass): void {\n\n  Yox = Class\n  domApi = Class.dom as API\n\n  Yox.directive({\n    push: directive,\n    replace: directive,\n  })\n\n  Yox.component('router-view', RouterView)\n\n  const { beforeCreate, afterMount, afterUpdate, afterDestroy } = Yox\n\n  Yox.beforeCreate = function (options) {\n\n    if (beforeCreate) {\n      beforeCreate(options)\n    }\n\n    let { parent } = options\n\n    // 处理 <router-view> 嵌入的组件\n    if (parent && options.beforeCreate !== RouterView.beforeCreate) {\n\n      // parent 是 <router-view> 实例，得再上一层才是路由组件\n      parent = parent.$parent\n      if (parent) {\n        const router = parent[ROUTER] as Router,\n        route = parent[ROUTE].child as typeUtil.LinkedRoute\n\n        if (router && route) {\n          const extensions = options.extensions = {}\n\n          extensions[ROUTER] = router\n          extensions[ROUTE] = route\n\n          if (router.location) {\n            options.props = filterProps(route, router.location, options)\n          }\n        }\n      }\n\n    }\n  }\n\n  Yox.afterMount = function (instance) {\n\n    if (afterMount) {\n      afterMount(instance)\n    }\n\n    updateRoute(instance, constant.HOOK_AFTER_ENTER, env.TRUE)\n\n  }\n  Yox.afterUpdate = function (instance) {\n\n    if (afterUpdate) {\n      afterUpdate(instance)\n    }\n\n    updateRoute(instance, env.UNDEFINED, env.TRUE)\n\n  }\n  Yox.afterDestroy = function (instance) {\n\n    if (afterDestroy) {\n      afterDestroy(instance)\n    }\n\n    updateRoute(instance, constant.HOOK_AFTER_LEAVE)\n\n  }\n\n}\n"],"names":["const","env.RAW_TRUE","env.TRUE","env.RAW_FALSE","env.FALSE","env.RAW_NULL","env.NULL","env.RAW_UNDEFINED","env.UNDEFINED","parse","constant.SEPARATOR_QUERY","constant.SEPARATOR_PAIR","valueUtil.parse","constant.FLAG_ARRAY","stringify","valueUtil.stringify","constant.SEPARATOR_PATH","constant.PREFIX_PARAM","constant.SEPARATOR_SEARCH","queryUtil.parse","queryUtil.stringify","env.EMPTY_STRING","constant.PREFIX_HASH","locationUtil.parse","env.EMPTY_FUNCTION","locationUtil.stringify","constant.HOOK_BEFORE_ENTER","constant.HOOK_BEFORE_LEAVE","constant.HOOK_AFTER_ENTER","constant.HOOK_AFTER_LEAVE"],"mappings":"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"}