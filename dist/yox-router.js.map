{"version":3,"file":"yox-router.js","sources":["../../yox-config/src/config.ts","../../yox-common/src/util/env.ts","../src/Hooks.ts","../src/constant.ts","../src/util/value.ts","../src/util/query.ts","../src/mode/hash.ts","../src/index.ts"],"sourcesContent":["export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\nexport const SLOT_NAME_DEFAULT = 'children'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n\n// 路由钩子\nexport const HOOK_BEFORE_ROUTE_ENTER = 'beforeRouteEnter'\nexport const HOOK_AFTER_ROUTE_ENTER = 'afterRouteEnter'\nexport const HOOK_BEFORE_ROUTE_UPDATE = 'beforeRouteUpdate'\nexport const HOOK_AFTER_ROUTE_UPDATE = 'afterRouteUpdate'\nexport const HOOK_BEFORE_ROUTE_LEAVE = 'beforeRouteLeave'\nexport const HOOK_AFTER_ROUTE_LEAVE = 'afterRouteLeave'\n","/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\nexport const RAW_MINUS_ONE = -1\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''","import Task from '../../yox-type/src/interface/Task'\nimport Location from '../../yox-type/src/router/Location'\n\nimport * as type from './type'\n\nexport default class Hooks {\n\n  list: Task[]\n\n  to: Location\n\n  from: Location | void\n\n  setLocation(to: Location, from: Location | void) {\n    this.to = to\n    this.from = from\n    return this\n  }\n\n  clear() {\n    this.list = []\n    return this\n  }\n\n  add(hook: Function | void, ctx: any) {\n    const { list } = this\n    if (hook) {\n      list.push({\n        fn: hook,\n        ctx,\n      })\n    }\n    return this\n  }\n\n  next(next: Function, isGuard?: boolean, callback?: type.Callback) {\n    const task = this.list.shift()\n    if (task) {\n      if (isGuard) {\n        task.fn.call(task.ctx, this.to, this.from, next)\n      }\n      else {\n        task.fn.call(task.ctx, this.to, this.from)\n        next()\n      }\n    }\n    else if (callback) {\n      callback()\n    }\n  }\n\n}","// path 中的参数前缀，如 #!/user/:userId\nexport const PREFIX_PARAM = ':'\n\n// path 分隔符\nexport const SEPARATOR_PATH = '/'\n\n// path 和 search 的分隔符\nexport const SEPARATOR_SEARCH = '?'\n\n// query 分隔符\nexport const SEPARATOR_QUERY = '&'\n\n// 键值对分隔符\nexport const SEPARATOR_PAIR = '='\n\n// 参数中的数组标识\nexport const FLAG_ARRAY = '[]'\n\n// 导航钩子 - 路由进入之前\nexport const HOOK_BEFORE_ENTER = 'beforeEnter'\n\n// 导航钩子 - 路由进入之后\nexport const HOOK_AFTER_ENTER = 'afterEnter'\n\n// 导航钩子 - 路由更新之前\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\n\n// 导航钩子 - 路由更新之后\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\n\n// 导航钩子 - 路由离开之前\nexport const HOOK_BEFORE_LEAVE = 'beforeLeave'\n\n// 导航钩子 - 路由离开之后\nexport const HOOK_AFTER_LEAVE = 'afterLeave'","import * as env from '../../../yox-common/src/util/env'\nimport YoxClass from '../../../yox-type/src/interface/YoxClass'\n\n/**\n * 把字符串 value 解析成最合适的类型\n */\nexport function parse(Yox: YoxClass, value: string) {\n  let result: any\n  if (Yox.is.numeric(value)) {\n    result = +value\n  }\n  else if (Yox.is.string(value)) {\n    if (value === env.RAW_TRUE) {\n      result = env.TRUE\n    }\n    else if (value === env.RAW_FALSE) {\n      result = env.FALSE\n    }\n    else if (value === env.RAW_NULL) {\n      result = env.NULL\n    }\n    else if (value === env.RAW_UNDEFINED) {\n      result = env.UNDEFINED\n    }\n    else {\n      result = decodeURIComponent(value)\n    }\n  }\n  return result\n}\n\nexport function stringify(Yox: YoxClass, value: any): string {\n  if (Yox.is.string(value)) {\n    return encodeURIComponent(value)\n  }\n  else if (Yox.is.number(value) || Yox.is.boolean(value)) {\n    return value.toString()\n  }\n  else if (value === env.NULL) {\n    return env.RAW_NULL\n  }\n  return env.RAW_UNDEFINED\n}","\nimport YoxClass from '../../../yox-type/src/interface/YoxClass'\n\nimport * as constant from '../constant'\nimport * as valueUtil from './value'\n\n/**\n * 把 GET 参数解析成对象\n */\nexport function parse(Yox: YoxClass, query: string) {\n  let result: Object | undefined\n  Yox.array.each(\n    query.split(constant.SEPARATOR_QUERY),\n    function (term) {\n\n      let terms = term.split(constant.SEPARATOR_PAIR),\n\n      key = Yox.string.trim(terms[0]),\n\n      value = terms[1]\n\n      if (key) {\n        if (!result) {\n          result = {}\n        }\n        value = valueUtil.parse(Yox, value)\n        if (Yox.string.endsWith(key, constant.FLAG_ARRAY)) {\n          key = Yox.string.slice(key, 0, -constant.FLAG_ARRAY.length)\n          Yox.array.push(\n            result[key] || (result[key] = []),\n            value\n          )\n        }\n        else {\n          result[key] = value\n        }\n      }\n\n    }\n  )\n  return result\n}\n\n/**\n * 把对象解析成 key1=value1&key2=value2\n */\nexport function stringify(Yox: YoxClass, query: Object) {\n  const result: string[] = []\n  for (let key in query) {\n    const value = query[key]\n    if (Yox.is.array(value)) {\n      Yox.array.each(\n        value,\n        function (value) {\n          result.push(\n            key + constant.FLAG_ARRAY + constant.SEPARATOR_PAIR + valueUtil.stringify(Yox, value)\n          )\n        }\n      )\n    }\n    else {\n      result.push(\n        key + constant.SEPARATOR_PAIR + valueUtil.stringify(Yox, value)\n      )\n    }\n  }\n  return result.join(constant.SEPARATOR_QUERY)\n}\n","import * as type from '../../../yox-type/src/type'\nimport * as env from '../../../yox-common/src/util/env'\n\nimport API from '../../../yox-type/src/interface/API'\nimport Location from '../../../yox-type/src/router/Location'\n\nimport * as constant from '../constant'\n\nconst WINDOW = window,\n\nLOCATION = WINDOW.location,\n\n// hash 前缀，Google 的规范是 #! 开头，如 #!/path/sub?key=value\nHASH_PREFIX = '#!',\n\nHASH_CHANGE = 'hashchange'\n\nexport function start(domApi: API, handler: Function) {\n  domApi.on(WINDOW, HASH_CHANGE, handler as type.listener)\n  handler()\n}\n\nexport function stop(domApi: API, handler: Function) {\n  domApi.off(WINDOW, HASH_CHANGE, handler as type.listener)\n}\n\nexport function setLocation(location: Location) {\n\n  const hash = HASH_PREFIX + location.url\n\n  if (LOCATION.hash !== hash) {\n    LOCATION.hash = hash\n    return env.TRUE\n  }\n\n}\n\nexport function createHandler(handler: (url: string) => void) {\n\n  return function () {\n\n    // 不能直接读取 window.location.hash\n    // 因为 Firefox 会做 pre-decode\n    let href = LOCATION.href, index = href.indexOf(HASH_PREFIX), url = constant.SEPARATOR_PATH\n    if (index > 0) {\n      url = href.substr(index + HASH_PREFIX.length)\n    }\n\n    handler(url)\n\n  }\n\n}","import * as config from '../../yox-config/src/config'\nimport * as type from '../../yox-type/src/type'\nimport * as routerType from './type'\n\nimport * as env from '../../yox-common/src/util/env'\n\nimport API from '../../yox-type/src/interface/API'\nimport Yox from '../../yox-type/src/interface/Yox'\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Directive from '../../yox-type/src/vnode/Directive'\nimport CustomEvent from '../../yox-type/src/event/CustomEvent'\n\nimport Location from '../../yox-type/src/router/Location'\nimport RouteTarget from '../../yox-type/src/router/RouteTarget'\n\nimport Hooks from './Hooks'\nimport * as constant from './constant'\nimport * as queryUtil from './util/query'\nimport * as valueUtil from './util/value'\n\nimport * as hashMode from './mode/hash'\n\nlet Yox: YoxClass, domApi: API, guid = 0\n\nconst ROUTER = '$router',\n\nROUTE = '$route',\n\nROUTE_VIEW = '$routeView',\n\nROUTE_COMPONENT = 'RouteComponent',\n\nEVENT_CLICK = 'click'\n\n/**\n * 格式化路径，确保它以 / 开头，不以 / 结尾\n */\nfunction formatPath(path: string, parentPath: string | void) {\n\n  // 如果不是 / 开头，表示是相对路径\n  if (!Yox.string.startsWith(path, constant.SEPARATOR_PATH)) {\n    // 确保 parentPath 以 / 结尾\n    if (parentPath) {\n      if (!Yox.string.endsWith(parentPath, constant.SEPARATOR_PATH)) {\n        parentPath += constant.SEPARATOR_PATH\n      }\n    }\n    else {\n      parentPath = constant.SEPARATOR_PATH\n    }\n    path = parentPath + path\n  }\n\n  // 如果 path 以 / 结尾，删掉它\n  if (path !== constant.SEPARATOR_PATH\n    && Yox.string.endsWith(path, constant.SEPARATOR_PATH)\n  ) {\n    path = Yox.string.slice(path, 0, -constant.SEPARATOR_PATH.length)\n  }\n\n  return path\n\n}\n\nfunction toLocation(target: routerType.Target, name2Path: type.data): Location {\n\n  const location: Location = {\n    path: env.EMPTY_STRING\n  }\n\n  if (Yox.is.string(target)) {\n    location.path = formatPath(target as string)\n  }\n  else {\n    const route = target as RouteTarget, name = route.name\n    if (name) {\n      location.path = name2Path[name]\n      if (process.env.NODE_ENV === 'development') {\n        if (!Yox.is.string(location.path)) {\n          Yox.logger.error(`The route of name[${name}] is not found.`)\n        }\n      }\n    }\n    else {\n      location.path = formatPath(route.path as string)\n    }\n    if (route.params) {\n      location.params = route.params\n    }\n    if (route.query) {\n      location.query = route.query\n    }\n  }\n\n  return location\n\n}\n\n/**\n * 按照 propTypes 定义的外部数据格式过滤路由参数，这样有两个好处：\n *\n * 1. 避免传入不符预期的数据\n * 2. 避免覆盖 data 定义的数据\n */\nfunction filterProps(route: routerType.LinkedRoute, location: Location, options: YoxOptions) {\n  const result: type.data = {}, propTypes = options.propTypes\n  if (propTypes) {\n\n    let props = location.query,\n\n    routeParams = route.params,\n\n    locationParams = location.params\n\n    // 从 location.params 挑出 route.params 定义过的参数\n    if (routeParams && locationParams) {\n      props = props ? Yox.object.copy(props) : {}\n      for (let i = 0, length = routeParams.length; i < length; i++) {\n        (props as type.data)[routeParams[i]] = locationParams[routeParams[i]]\n      }\n    }\n\n    if (props) {\n      for (let key in propTypes) {\n        result[key] = Yox.checkProp(key, props[key], propTypes[key])\n      }\n    }\n\n  }\n  return result\n}\n\n/**\n * 是否是叶子节点\n * 如果把叶子节点放在 if 中，会出现即使不是定义时的叶子节点，却是运行时的叶子节点\n */\nfunction isLeafRoute(route: routerType.LinkedRoute) {\n  const child = route.child\n  return !child || !child.context\n}\n\nfunction updateRoute(instance: Yox, hook: Function | void, componentHookName: string | void, hookName: string | undefined, upsert?: boolean) {\n  if (hook) {\n    hook(instance)\n  }\n  const route = instance[ROUTE] as routerType.LinkedRoute\n  if (route) {\n    route.context = upsert ? instance : env.UNDEFINED\n    if (isLeafRoute(route)) {\n      const router = instance[ROUTER] as Router\n      if (componentHookName && hookName) {\n        router.hook(route, componentHookName, hookName)\n      }\n      if (upsert) {\n        const { pending } = router\n        if (pending) {\n          pending.onComplete()\n          router.pending = env.UNDEFINED\n        }\n      }\n    }\n  }\n}\n\nexport class Router {\n\n  el: Element\n\n  routes: routerType.LinkedRoute[]\n\n  route404: routerType.LinkedRoute\n\n  name2Path: Record<string, string>\n\n  path2Route: Record<string, routerType.LinkedRoute>\n\n  history: Location[]\n\n  cursor: number\n\n  pending?: routerType.Pending\n\n  // 路由钩子\n  hooks: Hooks\n\n  // 路由或参数发生了变化会触发此函数\n  handler: Function\n\n  // 当前渲染的路由\n  route?: routerType.LinkedRoute\n\n  // 当前地址栏的路径和参数\n  location?: Location\n\n  [constant.HOOK_BEFORE_LEAVE]?: type.routerBeforeHook\n\n  [constant.HOOK_BEFORE_ENTER]?: type.routerBeforeHook\n\n  [constant.HOOK_AFTER_ENTER]?: type.routerAfterHook\n\n  [constant.HOOK_AFTER_LEAVE]?: type.routerAfterHook\n\n  constructor(options: routerType.RouterOptions) {\n\n    const instance = this, { el, route404 } = options\n\n    instance.el = Yox.is.string(el)\n      ? domApi.find(el as string) as Element\n      : el as Element\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!instance.el) {\n        Yox.logger.error(`router.el is not an element.`)\n        return\n      }\n      if (!route404) {\n        Yox.logger.error(`Route for 404 is required.`)\n        return\n      }\n    }\n\n    instance.handler = hashMode.createHandler(\n      function (url) {\n        let { pending } = instance\n\n        if (pending) {\n          const { location } = pending\n          // 通过 push 或 go 触发\n          if (location.url === url) {\n            instance.setHistory(location, pending.cursor)\n            instance.setRoute(location)\n            return\n          }\n          instance.pending = env.UNDEFINED\n        }\n\n        // 直接修改地址栏触发\n        instance.parseLocation(\n          url,\n          function (location) {\n            if (location) {\n              instance.setHistory(location)\n              instance.setRoute(location)\n            }\n            else {\n              instance.push(instance.route404)\n            }\n          }\n        )\n      }\n    )\n\n    instance.routes = []\n    instance.name2Path = {}\n    instance.path2Route = {}\n\n    instance.history = []\n    instance.cursor = -1\n\n    instance.hooks = new Hooks()\n\n    Yox.array.each(\n      options.routes,\n      function (route) {\n        instance.add(route)\n      }\n    )\n\n    instance.route404 = instance.add(route404)[0]\n\n  }\n\n  /**\n   * 添加新的路由\n   */\n  add(routeOptions: routerType.RouteOptions) {\n\n    const instance = this,\n\n    newRoutes: routerType.LinkedRoute[] = [],\n\n    pathStack: string[] = [],\n\n    routeStack: routerType.LinkedRoute[] = [],\n\n    addRoute = function (routeOptions: routerType.RouteOptions) {\n\n      let { name, component, children, loadRoute } = routeOptions,\n\n      parentPath = Yox.array.last(pathStack),\n\n      parentRoute = Yox.array.last(routeStack),\n\n      path = formatPath(routeOptions.path, parentPath),\n\n      route: routerType.LinkedRoute = { path, route: routeOptions },\n\n      params: string[] = []\n\n      Yox.array.each(\n        path.split(constant.SEPARATOR_PATH),\n        function (item) {\n          if (Yox.string.startsWith(item, constant.PREFIX_PARAM)) {\n            params.push(\n              item.substr(constant.PREFIX_PARAM.length)\n            )\n          }\n        }\n      )\n\n      if (params.length) {\n        route.params = params\n      }\n\n      if (name) {\n        route.name = name\n      }\n\n      // component 和 loadRoute 二选一\n      if (component) {\n        route.component = component\n      }\n      else if (loadRoute) {\n        route.loadRoute = loadRoute\n      }\n\n      if (parentRoute) {\n        route.parent = parentRoute\n      }\n\n      if (children) {\n        pathStack.push(path)\n        routeStack.push(route)\n        Yox.array.each(\n          children,\n          addRoute\n        )\n        routeStack.pop()\n        pathStack.pop()\n      }\n      else {\n\n        newRoutes.push(route)\n        instance.routes.push(route)\n\n        if (name) {\n          if (process.env.NODE_ENV === 'development') {\n            if (Yox.object.has(instance.name2Path, name)) {\n              Yox.logger.error(`Name[${name}] of the route is existed.`)\n              return\n            }\n          }\n          instance.name2Path[name] = path\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          if (Yox.object.has(instance.path2Route, path)) {\n            Yox.logger.error(`path [${path}] of the route is existed.`)\n            return\n          }\n        }\n\n        instance.path2Route[path] = route\n\n      }\n\n    }\n\n    addRoute(routeOptions)\n\n    return newRoutes\n\n  }\n\n  remove(route: routerType.LinkedRoute) {\n\n    const instance = this\n\n    Yox.array.remove(instance.routes, route)\n\n    if (route.name) {\n      delete instance.name2Path[route.name]\n    }\n\n    delete instance.path2Route[route.path]\n\n  }\n\n  /**\n   * 真正执行路由切换操作的函数\n   *\n   * target 有 2 种格式：\n   *\n   * 如果只是简单的 path，直接传字符串\n   *\n   * push('/index')\n   *\n   * 如果需要带参数，可传对象\n   *\n   * push({\n   *   path: '/index',\n   *   params: { },\n   *   query: { }\n   * })\n   *\n   * 如果路由配置了 name，可用 name 代替 path，如下：\n   *\n   * push({\n   *   name: 'index'\n   * })\n   *\n   */\n  push(target: routerType.Target) {\n\n    const instance = this\n\n    instance.setLocation(\n      toLocation(target, instance.name2Path),\n      env.UNDEFINED,\n      env.EMPTY_FUNCTION,\n      env.EMPTY_FUNCTION,\n      function (location) {\n        instance.setHash(location)\n      }\n    )\n\n  }\n\n  replace(target: routerType.Target) {\n\n    const instance = this\n\n    instance.setLocation(\n      toLocation(target, instance.name2Path),\n      env.UNDEFINED,\n      function () {\n        instance.replaceHistory(instance.location as Location)\n      },\n      env.EMPTY_FUNCTION,\n      function (location) {\n        instance.setRoute(location)\n      }\n    )\n\n  }\n\n  go(offset: number) {\n\n    const instance = this,\n\n    cursor = instance.cursor + offset,\n\n    location: Location | void = instance.history[cursor]\n\n    if (location) {\n      instance.setLocation(\n        location,\n        cursor,\n        env.EMPTY_FUNCTION,\n        env.EMPTY_FUNCTION,\n        function (location) {\n          instance.setHash(location)\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 启动路由\n   */\n  start() {\n    hashMode.start(domApi, this.handler)\n  }\n\n  /**\n   * 停止路由\n   */\n  stop() {\n    hashMode.stop(domApi, this.handler)\n  }\n\n  /**\n   * 钩子函数\n   */\n  hook(route: routerType.LinkedRoute, componentHook: string, hook: string, isGuard?: boolean, callback?: routerType.Callback) {\n\n    const instance = this, { location, hooks, pending } = instance\n\n    hooks\n      .clear()\n      // 先调用组件的钩子\n      .add((route.component as YoxOptions)[componentHook], route.context)\n      // 再调用路由配置的钩子\n      .add(route.route[hook], route.route)\n      // 最后调用路由实例的钩子\n      .add(instance[hook], instance)\n\n    const next = function (value?: false | routerType.Target) {\n      if (value === env.UNDEFINED) {\n        hooks.next(next, isGuard, callback)\n      }\n      else {\n        // 只有前置守卫才有可能走进这里\n        // 此时 instance.location 还是旧地址\n        if (pending) {\n          pending.onAbort()\n          instance.pending = env.UNDEFINED\n        }\n        if (value === env.FALSE) {\n          if (location) {\n            instance.push(location)\n          }\n        }\n        else {\n          // 跳转到别的路由\n          instance.push(value)\n        }\n      }\n    }\n\n    next()\n\n  }\n\n  private setHistory(location: Location, index: number | void) {\n\n    const { history, cursor } = this\n\n    // 如果没传 cursor，表示 push\n    if (!Yox.is.number(index)) {\n      index = cursor + 1\n      // 确保下一个为空\n      // 如果不为空，肯定是调用过 go()，此时直接清掉后面的就行了\n      if (history[index]) {\n        history.length = index\n      }\n    }\n\n    history[index as number] = location\n\n    this.cursor = index as number\n\n  }\n\n  private replaceHistory(location: Location) {\n    const { history, cursor } = this\n    if (history[cursor]) {\n      history[cursor] = location\n    }\n  }\n\n  private setHash(location: Location) {\n\n    if (!hashMode.setLocation(location)) {\n      this.setRoute(location)\n    }\n\n  }\n\n  private setLocation(\n    location: Location,\n    cursor: number | void,\n    onComplete: routerType.RouteComplete,\n    onAbort: routerType.RouteAbort,\n    callback: (locaiton: Location) => void\n  ) {\n\n    let instance = this,\n\n    url = instance.stringifyLocation(location),\n\n    oldLocation = instance.location,\n\n    oldUrl = oldLocation ? instance.stringifyLocation(oldLocation) : env.UNDEFINED\n\n    instance.parseLocation(\n      url,\n      function (location) {\n\n        if (!location) {\n          url = instance.route404.path\n          location = {\n            url,\n            path: url\n          }\n        }\n\n        if (url !== oldUrl) {\n          instance.pending = {\n            cursor,\n            location,\n            onComplete,\n            onAbort,\n          }\n          callback(location)\n        }\n\n      }\n    )\n\n  }\n\n  private parseLocation(url: string, callback: (location: Location | void) => void) {\n\n    let realpath: string, search: string | void, index = url.indexOf(constant.SEPARATOR_SEARCH)\n\n    if (index >= 0) {\n      realpath = url.slice(0, index)\n      search = url.slice(index + 1)\n    }\n    else {\n      realpath = url\n    }\n\n    // 匹配已注册的 route\n    const instance = this,\n\n    realpathTerms = realpath.split(constant.SEPARATOR_PATH),\n\n    length = realpathTerms.length,\n\n    searchRoute = function (\n      routes: routerType.LinkedRoute[],\n      callback: (route?: routerType.LinkedRoute, params?: type.data) => void\n    ) {\n\n      let index = 0, route: routerType.LinkedRoute | void\n\n      loop: while (route = routes[index++]) {\n        const path = route.path\n\n        // 动态路由\n        if (route.params) {\n          const pathTerms = path.split(constant.SEPARATOR_PATH)\n          // path 段数量必须一致，否则没有比较的意义\n          if (length === pathTerms.length) {\n            const params: type.data = {}\n            for (let i = 0; i < length; i++) {\n              if (Yox.string.startsWith(pathTerms[i], constant.PREFIX_PARAM)) {\n                params[pathTerms[i].substr(constant.PREFIX_PARAM.length)] = valueUtil.parse(Yox, realpathTerms[i])\n              }\n              // 非参数段不相同\n              else if (pathTerms[i] !== realpathTerms[i]) {\n                continue loop\n              }\n            }\n            callback(route, params)\n            return\n          }\n        }\n        // 懒加载路由，前缀匹配成功后，意味着懒加载回来的路由一定有我们想要的\n        else if (route.loadRoute && Yox.string.startsWith(realpath, path)) {\n          route.loadRoute(\n            function (lazyRoute) {\n              instance.remove(route as routerType.LinkedRoute)\n              searchRoute(\n                instance.add(lazyRoute),\n                callback\n              )\n            }\n          )\n          return\n        }\n        else if (path === realpath) {\n          callback(route)\n          return\n        }\n      }\n\n      callback()\n\n    }\n\n    searchRoute(\n      instance.routes,\n      function (route, params) {\n        if (route) {\n          const location: Location = {\n            url,\n            path: route.path\n          }\n          if (params) {\n            location.params = params\n          }\n          if (search) {\n            const query = queryUtil.parse(Yox, search)\n            if (query) {\n              location.query = query\n            }\n          }\n          callback(location)\n        }\n        else {\n          callback()\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 把结构化数据序列化成 hash\n   */\n  private stringifyLocation(location: Location) {\n\n    const { path, params, query } = location, terms: string[] = []\n\n    Yox.array.each(\n      path.split(constant.SEPARATOR_PATH),\n      function (item) {\n        terms.push(\n          Yox.string.startsWith(item, constant.PREFIX_PARAM) && params\n            ? params[item.substr(constant.PREFIX_PARAM.length)]\n            : item\n        )\n      }\n    )\n\n    let realpath = terms.join(constant.SEPARATOR_PATH)\n\n    if (query) {\n      const queryStr = queryUtil.stringify(Yox, query)\n      if (queryStr) {\n        realpath += constant.SEPARATOR_SEARCH + queryStr\n      }\n    }\n\n    return realpath\n\n  }\n\n  private diffRoute(\n    route: routerType.LinkedRoute,\n    oldRoute: routerType.LinkedRoute | void,\n    onComplete: routerType.DiffComplete,\n    startRoute: routerType.LinkedRoute | void,\n    childRoute: routerType.LinkedRoute | void,\n    oldTopRoute: routerType.LinkedRoute | void\n  ) {\n\n    // 更新链路\n    if (childRoute) {\n      route.child = childRoute\n      childRoute.parent = route\n    }\n\n    if (oldRoute) {\n      // 同级的两个组件不同，疑似起始更新的路由\n      if (oldRoute.component !== route.component) {\n        startRoute = route\n      }\n      else {\n        // 把上次的组件实例搞过来\n        route.context = oldRoute.context\n      }\n    }\n    else {\n      startRoute = route\n    }\n\n    if (route.parent) {\n      this.diffRoute(\n        Yox.object.copy(route.parent),\n        oldRoute ? oldRoute.parent : env.UNDEFINED,\n        onComplete,\n        startRoute,\n        route,\n        oldRoute || oldTopRoute\n      )\n      return\n    }\n\n    // 整个组件树全换掉\n    if (startRoute === route) {\n      let context: Yox | void\n      // 当层级较多的路由切换到层级较少的路由\n      if (oldRoute) {\n        while (oldRoute) {\n          context = oldRoute.context\n          oldRoute = oldRoute.parent\n        }\n      }\n      // 当层级较少的路由切换到层级较多的路由\n      else if (oldTopRoute) {\n        context = oldTopRoute.context\n      }\n      if (context) {\n        startRoute.context = context\n      }\n    }\n\n    // 到达根组件，结束\n    onComplete(route, startRoute)\n\n  }\n\n  private patchRoute(\n    route: routerType.LinkedRoute,\n    startRoute: routerType.LinkedRoute | void\n  ) {\n\n    const instance = this, location = instance.location as Location\n\n    // 从上往下更新 props\n    while (route) {\n\n      let { parent, context, component } = route\n\n      if (route === startRoute) {\n\n        if (parent) {\n\n          context = parent.context as Yox\n          context.forceUpdate(\n            filterProps(\n              parent,\n              location,\n              parent.component as YoxOptions\n            )\n          )\n\n          context = context[ROUTE_VIEW]\n          if (context) {\n            const props = {}, name = ROUTE_COMPONENT + (++guid)\n            props[ROUTE_COMPONENT] = name\n            context.component(name, component)\n            context.forceUpdate(props)\n          }\n\n        }\n        else {\n\n          if (context) {\n            context.destroy()\n          }\n\n          // 每层路由组件都有 $route 和 $router 属性\n          const extensions = {}\n          extensions[ROUTER] = instance\n          extensions[ROUTE] = route\n\n          route.context = new Yox(\n            Yox.object.extend(\n              {\n                el: instance.el,\n                props: filterProps(route, location, component as YoxOptions),\n                extensions,\n              },\n              component as YoxOptions\n            )\n          )\n\n        }\n\n      }\n\n      else if (context) {\n        if (context.$vnode) {\n          context[ROUTE] = route\n          context.forceUpdate(\n            filterProps(route, location, component as YoxOptions)\n          )\n        }\n        else {\n          route.context = env.UNDEFINED\n        }\n        if (route.child) {\n          route = route.child as routerType.LinkedRoute\n          continue\n        }\n      }\n      break\n    }\n  }\n\n  private setRoute(location: Location) {\n\n    let instance = this,\n\n    linkedRoute = instance.path2Route[location.path],\n\n    redirect = linkedRoute.route.redirect\n\n    if (redirect) {\n      if (Yox.is.func(redirect)) {\n        redirect = (redirect as routerType.Redirect)(location)\n      }\n      if (redirect) {\n        instance.push(redirect as routerType.Target)\n        return\n      }\n    }\n\n    const newRoute = Yox.object.copy(linkedRoute),\n\n    oldRoute = instance.route,\n\n    oldLocation = instance.location,\n\n    enterRoute = function () {\n      instance.diffRoute(\n        newRoute,\n        oldRoute,\n        function (route, startRoute) {\n          instance.hook(\n            newRoute,\n            startRoute ? config.HOOK_BEFORE_ROUTE_ENTER : config.HOOK_BEFORE_ROUTE_UPDATE,\n            startRoute ? constant.HOOK_BEFORE_ENTER : constant.HOOK_BEFORE_UPDATE,\n            env.TRUE,\n            function () {\n\n              instance.route = newRoute\n              instance.location = location\n\n              instance.patchRoute(route, startRoute)\n\n            }\n          )\n        }\n      )\n    }\n\n    instance.hooks.setLocation(location, oldLocation)\n\n    if (oldRoute && oldLocation && location.path !== oldLocation.path) {\n      instance.hook(\n        oldRoute,\n        config.HOOK_BEFORE_ROUTE_LEAVE,\n        constant.HOOK_BEFORE_LEAVE,\n        env.TRUE,\n        enterRoute\n      )\n      return\n    }\n\n    enterRoute()\n\n  }\n\n}\n\nconst directive = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // 当前组件如果是根组件，则没有 $root 属性\n    const $root = vnode.context.$root || vnode.context,\n\n    router = $root[ROUTER] as Router,\n\n    listener = vnode.data[directive.key] = function (_: CustomEvent) {\n      let { value, getter } = directive, target: any = value\n      if (value && getter && Yox.string.has(value as string, '{')) {\n        target = getter()\n      }\n      router[directive.name](target)\n    }\n\n    if (vnode.isComponent) {\n      (node as Yox).on(EVENT_CLICK, listener)\n    }\n    else {\n      domApi.on(node as HTMLElement, EVENT_CLICK, listener)\n    }\n\n  },\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    const listener = vnode.data[directive.key]\n    if (vnode.isComponent) {\n      (node as Yox).off(EVENT_CLICK, listener)\n    }\n    else {\n      domApi.off(node as HTMLElement, EVENT_CLICK, listener)\n    }\n  },\n},\n\nRouterView: YoxOptions = {\n  template: '<$' + ROUTE_COMPONENT + '/>',\n  beforeCreate(options) {\n\n    const $parent = options.parent as Yox,\n\n    route = $parent[ROUTE].child as routerType.LinkedRoute\n\n    if (route) {\n\n      $parent[ROUTE_VIEW] = this\n\n      const props = options.props = {},\n\n      components = options.components = {},\n\n      name = ROUTE_COMPONENT + (++guid)\n\n      props[ROUTE_COMPONENT] = name\n      components[name] = route.component\n\n    }\n\n  },\n  beforeDestroy() {\n    this.$parent[ROUTE_VIEW] = env.UNDEFINED\n  }\n}\n\n/**\n * 版本\n */\nexport const version = process.env.NODE_VERSION\n\n/**\n * 安装插件\n */\nexport function install(Class: YoxClass): void {\n\n  Yox = Class\n  domApi = Class.dom as API\n\n  Yox.directive({\n    push: directive,\n    replace: directive,\n    go: directive,\n  })\n\n  Yox.component('router-view', RouterView)\n\n  const { beforeCreate, afterMount, afterUpdate, afterDestroy } = Yox\n\n  Yox.beforeCreate = function (options) {\n\n    if (beforeCreate) {\n      beforeCreate(options)\n    }\n\n    let { parent } = options\n\n    // 处理 <router-view> 嵌入的组件\n    if (parent && options.beforeCreate !== RouterView.beforeCreate) {\n\n      // parent 是 <router-view> 实例，得再上一层才是路由组件\n      parent = parent.$parent\n      if (parent) {\n        const router = parent[ROUTER] as Router,\n        route = parent[ROUTE].child as routerType.LinkedRoute\n\n        if (router && route) {\n          const extensions = options.extensions = {}\n\n          extensions[ROUTER] = router\n          extensions[ROUTE] = route\n\n          if (router.location) {\n            options.props = filterProps(route, router.location, options)\n          }\n        }\n      }\n\n    }\n  }\n\n  Yox.afterMount = function (instance) {\n\n    updateRoute(instance, afterMount, config.HOOK_AFTER_ROUTE_ENTER, constant.HOOK_AFTER_ENTER, env.TRUE)\n\n  }\n  Yox.afterUpdate = function (instance) {\n\n    updateRoute(instance, afterUpdate, config.HOOK_AFTER_ROUTE_UPDATE, constant.HOOK_AFTER_UPDATE, env.TRUE)\n\n  }\n  Yox.afterDestroy = function (instance) {\n\n    updateRoute(instance, afterDestroy, config.HOOK_AFTER_ROUTE_LEAVE, constant.HOOK_AFTER_LEAVE)\n\n  }\n\n}\n"],"names":["const","env.RAW_TRUE","env.TRUE","env.RAW_FALSE","env.FALSE","env.RAW_NULL","env.NULL","env.RAW_UNDEFINED","env.UNDEFINED","parse","constant.SEPARATOR_QUERY","constant.SEPARATOR_PAIR","valueUtil.parse","constant.FLAG_ARRAY","stringify","valueUtil.stringify","constant.SEPARATOR_PATH","env.EMPTY_STRING","hashMode.createHandler","constant.PREFIX_PARAM","env.EMPTY_FUNCTION","hashMode.start","hashMode.stop","hashMode.setLocation","constant.SEPARATOR_SEARCH","queryUtil.parse","queryUtil.stringify","config.HOOK_BEFORE_ROUTE_ENTER","config.HOOK_BEFORE_ROUTE_UPDATE","constant.HOOK_BEFORE_ENTER","constant.HOOK_BEFORE_UPDATE","config.HOOK_BEFORE_ROUTE_LEAVE","constant.HOOK_BEFORE_LEAVE","config.HOOK_AFTER_ROUTE_ENTER","constant.HOOK_AFTER_ENTER","config.HOOK_AFTER_ROUTE_UPDATE","constant.HOOK_AFTER_UPDATE","config.HOOK_AFTER_ROUTE_LEAVE","constant.HOOK_AFTER_LEAVE"],"mappings":"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"}