{"version":3,"file":"yox-router.js","sources":["../../yox-common/src/util/env.ts","../src/Hooks.ts","../src/constant.ts","../src/value.ts","../src/query.ts","../src/hash.ts","../src/index.ts"],"sourcesContent":["/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\nexport const RAW_MINUS_ONE = -1\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''","import Task from '../../yox-type/src/interface/Task'\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport { Router } from './index'\n\nimport * as typeUtil from './type'\n\nexport default class Hooks {\n\n  name: string\n\n  list: Task[]\n\n  to: typeUtil.Location\n\n  from: typeUtil.Location | void\n\n  setLocation(to: typeUtil.Location, from: typeUtil.Location | void) {\n    this.to = to\n    this.from = from\n    return this\n  }\n\n  setName(name: string) {\n    this.name = name\n    this.list = []\n    return this\n  }\n\n  add(target: YoxOptions | typeUtil.RouteOptions | Router | void, ctx: any) {\n    const { name, list } = this\n    if (target && target[name]) {\n      list.push({\n        fn: target[name],\n        ctx,\n      })\n    }\n    return this\n  }\n\n  next(next: (value?: false | typeUtil.Target) => void, complete?: () => void) {\n    const task = this.list.shift()\n    if (task) {\n      if (complete) {\n        task.fn.call(task.ctx, this.to, this.from, next)\n      }\n      else {\n        task.fn.call(task.ctx, this.to, this.from)\n        next()\n      }\n    }\n    else if (complete) {\n      complete()\n    }\n  }\n\n}","// hash 前缀，Google 的规范是 #! 开头，如 #!/path/sub?key=value\nexport const PREFIX_HASH = '#!'\n\n// path 中的参数前缀，如 #!/user/:userId\nexport const PREFIX_PARAM = ':'\n\n// path 分隔符\nexport const SEPARATOR_PATH = '/'\n\nexport const SEPARATOR_SEARCH = '?'\n\n// 导航钩子 - 路由进入之前\nexport const HOOK_BEFORE_ENTER = 'beforeEnter'\n\n// 导航钩子 - 路由进入之后\nexport const HOOK_AFTER_ENTER = 'afterEnter'\n\n// 导航钩子 - 路由离开之前\nexport const HOOK_BEFORE_LEAVE = 'beforeLeave'\n\n// 导航钩子 - 路由离开之后\nexport const HOOK_AFTER_LEAVE = 'afterLeave'","import * as env from '../../yox-common/src/util/env'\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\n/**\n * 把字符串 value 解析成最合适的类型\n */\nexport function parse(Yox: YoxClass, value: string) {\n  let result: any\n  if (Yox.is.numeric(value)) {\n    result = +value\n  }\n  else if (Yox.is.string(value)) {\n    if (value === env.RAW_TRUE) {\n      result = env.TRUE\n    }\n    else if (value === env.RAW_FALSE) {\n      result = env.FALSE\n    }\n    else if (value === env.RAW_NULL) {\n      result = env.NULL\n    }\n    else if (value === env.RAW_UNDEFINED) {\n      result = env.UNDEFINED\n    }\n    else {\n      result = decodeURIComponent(value)\n    }\n  }\n  return result\n}\n\nexport function stringify(Yox: YoxClass, value: any): string {\n  if (Yox.is.string(value)) {\n    return encodeURIComponent(value)\n  }\n  else if (Yox.is.number(value) || Yox.is.boolean(value)) {\n    return value.toString()\n  }\n  else if (value === env.NULL) {\n    return env.RAW_NULL\n  }\n  return env.RAW_UNDEFINED\n}","\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\nimport * as valueUtil from './value'\n\n// query 分隔符\nconst SEPARATOR_QUERY = '&',\n\n// 键值对分隔符\nSEPARATOR_PAIR = '=',\n\n// 参数中的数组标识\nFLAG_ARRAY = '[]'\n\n/**\n * 把 GET 参数解析成对象\n */\nexport function parse(Yox: YoxClass, query: string) {\n  let result: Object | undefined\n  Yox.array.each(\n    query.split(SEPARATOR_QUERY),\n    function (term) {\n\n      let terms = term.split(SEPARATOR_PAIR),\n\n      key = Yox.string.trim(terms[0]),\n\n      value = terms[1]\n\n      if (key) {\n        if (!result) {\n          result = {}\n        }\n        value = valueUtil.parse(Yox, value)\n        if (Yox.string.endsWith(key, FLAG_ARRAY)) {\n          key = Yox.string.slice(key, 0, -FLAG_ARRAY.length)\n          Yox.array.push(\n            result[key] || (result[key] = []),\n            value\n          )\n        }\n        else {\n          result[key] = value\n        }\n      }\n\n    }\n  )\n  return result\n}\n\n/**\n * 把对象解析成 key1=value1&key2=value2\n */\nexport function stringify(Yox: YoxClass, query: Object) {\n  const result: string[] = []\n  for (let key in query) {\n    const value = query[key]\n    if (Yox.is.array(value)) {\n      Yox.array.each(\n        value,\n        function (value) {\n          result.push(\n            key + FLAG_ARRAY + SEPARATOR_PAIR + valueUtil.stringify(Yox, value)\n          )\n        }\n      )\n    }\n    else {\n      result.push(\n        key + SEPARATOR_PAIR + valueUtil.stringify(Yox, value)\n      )\n    }\n  }\n  return result.join(SEPARATOR_QUERY)\n}\n","import * as env from '../../yox-common/src/util/env'\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\nimport * as type from './type'\nimport * as constant from './constant'\nimport * as valueUtil from './value'\nimport * as queryUtil from './query'\n\n/**\n * 解析 path 中的参数\n */\nfunction parseParams(Yox: YoxClass, realpath: string, path: string) {\n\n  let result: Object | undefined,\n\n  realpathTerms = realpath.split(constant.SEPARATOR_PATH),\n\n  pathTerms = path.split(constant.SEPARATOR_PATH)\n\n  if (realpathTerms.length === pathTerms.length) {\n    Yox.array.each(\n      pathTerms,\n      function (item, index) {\n        if (Yox.string.startsWith(item, constant.PREFIX_PARAM)) {\n          if (!result) {\n            result = {}\n          }\n          result[item.substr(constant.PREFIX_PARAM.length)] = valueUtil.parse(Yox, realpathTerms[index])\n        }\n      }\n    )\n  }\n\n  return result\n\n}\n\n/**\n * 通过 realpath 获取配置的路由\n */\nfunction getRouteByRealpath(Yox: YoxClass, routes: type.LinkedRoute[], realpath: string) {\n\n  let result: type.LinkedRoute | undefined,\n\n  realpathTerms = realpath.split(constant.SEPARATOR_PATH),\n\n  length = realpathTerms.length\n\n  Yox.array.each(\n    routes,\n    function (route) {\n      if (route.params) {\n        const pathTerms = route.path.split(constant.SEPARATOR_PATH)\n        if (length === pathTerms.length) {\n          for (let i = 0; i < length; i++) {\n            // 非参数段不相同\n            if (!Yox.string.startsWith(pathTerms[i], constant.PREFIX_PARAM)\n              && pathTerms[i] !== realpathTerms[i]\n            ) {\n              return\n            }\n          }\n          result = route\n          return env.FALSE\n        }\n      }\n      else if (route.path === realpath) {\n        result = route\n        return env.FALSE\n      }\n    }\n  )\n\n  return result\n\n}\n\n/**\n * 完整解析 hash 数据\n */\nexport function parse(Yox: YoxClass, routes: type.LinkedRoute[], hash: string) {\n\n  let realpath: string, search: string | void, index = hash.indexOf(constant.SEPARATOR_SEARCH)\n\n  if (index >= 0) {\n    realpath = hash.substring(0, index)\n    search = hash.substring(index + 1)\n  }\n  else {\n    realpath = hash\n  }\n\n  const result: type.Hash = { realpath },\n\n  route = getRouteByRealpath(Yox, routes, realpath)\n\n  if (route) {\n    result.route = route\n    if (route.params) {\n      const params = parseParams(Yox, realpath, route.path)\n      if (params) {\n        result.params = params\n      }\n    }\n    if (search) {\n      const query = queryUtil.parse(Yox, search)\n      if (query) {\n        result.query = query\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * 把结构化数据序列化成 hash\n */\nexport function stringify(Yox: YoxClass, path: string, params: Object | void, query: Object | void) {\n\n  let terms: string[] = [], realpath: string, search = env.EMPTY_STRING\n\n  Yox.array.each(\n    path.split(constant.SEPARATOR_PATH),\n    function (item) {\n      terms.push(\n        Yox.string.startsWith(item, constant.PREFIX_PARAM)\n          ? params[item.substr(constant.PREFIX_PARAM.length)]\n          : item\n      )\n    }\n  )\n\n  realpath = terms.join(constant.SEPARATOR_PATH)\n\n  if (query) {\n    const queryStr = queryUtil.stringify(Yox, query)\n    if (queryStr) {\n      search = constant.SEPARATOR_SEARCH + queryStr\n    }\n  }\n\n  return realpath + search\n\n}","import * as type from '../../yox-type/src/type'\n\nimport * as env from '../../yox-common/src/util/env'\n\nimport API from '../../yox-type/src/interface/API'\nimport Yox from '../../yox-type/src/interface/Yox'\nimport YoxClass from '../../yox-type/src/interface/YoxClass'\n\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Directive from '../../yox-type/src/vnode/Directive'\nimport CustomEvent from '../../yox-type/src/event/CustomEvent'\n\nimport Hooks from './Hooks'\nimport * as constant from './constant'\nimport * as typeUtil from './type'\nimport * as hashUtil from './hash'\n\nlet Yox: YoxClass, registry: Yox, domApi: API\n\nconst OUTLET = '$outlet',\n\nROUTE = '$route',\n\nROUTER = '$router',\n\nCOMPONENT = 'RouteComponent',\n\nEVENT_CLICK = 'click'\n\n/**\n * 格式化路径，确保它以 / 开头，不以 / 结尾\n */\nfunction formatPath(path: string, parentPath: string | void) {\n\n  // 如果 path 以 / 结尾，删掉它\n  // 比如 { path: 'index/' }\n  if (Yox.string.endsWith(path, constant.SEPARATOR_PATH)) {\n    path = Yox.string.slice(path, 0, -1)\n  }\n\n  // 如果 path 不是以 / 开头，有两种情况：\n  // 1. 没有上级或上级是 ''，需要自动加 / 前缀\n  // 2. 相对上级的路径，自动替换最后一个 / 后面的路径\n  if (!Yox.string.startsWith(path, constant.SEPARATOR_PATH)) {\n\n    if (path) {\n      if (Yox.string.falsy(parentPath)) {\n        path = constant.SEPARATOR_PATH + path\n      }\n      else {\n        path = parentPath + constant.SEPARATOR_PATH + path\n      }\n    }\n    else if (parentPath) {\n      path = parentPath\n    }\n\n  }\n\n  return path\n}\n\n/**\n * 按照 propTypes 定义的外部数据格式过滤路由参数，这样有两个好处：\n *\n * 1. 避免传入不符预期的数据\n * 2. 避免覆盖 data 定义的数据\n */\nfunction filterProps(route: typeUtil.LinkedRoute, location: typeUtil.Location, options: YoxOptions) {\n  const result: type.data = {}, propTypes = options.propTypes\n  if (propTypes) {\n\n    let props = location.query,\n\n    routeParams = route.params,\n\n    locationParams = location.params\n\n    // 从 location.params 挑出 route.params 参数\n    if (routeParams && locationParams) {\n      if (!props) {\n        props = {}\n      }\n      for (let i = 0, key: string; key = routeParams[i]; i++) {\n        props[key] = locationParams[key]\n      }\n    }\n\n    if (props) {\n      for (let key in propTypes) {\n        result[key] = Yox.checkProp(key, props[key], propTypes[key])\n      }\n    }\n\n  }\n  return result\n}\n\nexport class Router {\n\n  el: Element\n\n  routes: typeUtil.LinkedRoute[]\n\n  route404: typeUtil.LinkedRoute\n\n  name2Path: Record<string, string>\n\n  path2Route: Record<string, typeUtil.LinkedRoute>\n\n  hooks: Hooks\n\n  // 路由或参数发生了变化会触发此函数\n  onChange: Function\n\n  // 当前渲染的路由\n  route?: typeUtil.LinkedRoute\n\n  // 当前地址栏的路径和参数\n  location?: typeUtil.Location\n\n  [constant.HOOK_BEFORE_LEAVE]?: typeUtil.BeforeHook\n\n  [constant.HOOK_BEFORE_ENTER]?: typeUtil.BeforeHook\n\n  [constant.HOOK_AFTER_ENTER]?: typeUtil.AfterHook\n\n  [constant.HOOK_AFTER_LEAVE]?: typeUtil.AfterHook\n\n  constructor(options: typeUtil.RouterOptions) {\n\n    const instance = this, route404 = options.route404\n\n    instance.el = options.el\n\n    /**\n     * hashchange 事件处理函数\n     * 此函数必须写在实例上，不能写在类上\n     * 否则一旦解绑，所有实例都解绑了\n     */\n    instance.onChange = function () {\n\n      let hashStr = location.hash\n\n      // 如果不以 PREFIX_HASH 开头，表示不合法\n      hashStr = Yox.string.startsWith(hashStr, constant.PREFIX_HASH)\n        ? hashStr.substr(constant.PREFIX_HASH.length)\n        : ''\n\n      const hash = hashUtil.parse(Yox, instance.routes, hashStr), { route } = hash\n\n      if (route) {\n        instance.setRoute(\n          {\n            path: route.path,\n            params: hash.params,\n            query: hash.query,\n          },\n          route\n        )\n      }\n      else {\n        instance.push(instance.route404)\n      }\n\n    }\n\n    if (process.env.NODE_ENV === 'dev') {\n      if (!route404) {\n        Yox.logger.error(`Route for 404 is required.`)\n        return\n      }\n    }\n\n    instance.routes = []\n    instance.name2Path = {}\n    instance.path2Route = {}\n\n    instance.hooks = new Hooks()\n\n    instance.add(options.routes)\n    instance.add([route404])\n\n    instance.route404 = Yox.array.last(instance.routes) as typeUtil.LinkedRoute\n\n  }\n\n  add(routes: typeUtil.RouteOptions[]) {\n\n    let instance = this, pathStack: any = [], routeStack: any = [],\n\n    callback = function (routeOptions: typeUtil.RouteOptions) {\n\n      let { name, path, component, children } = routeOptions,\n\n      parentPath: string | void = pathStack[pathStack.length - 1],\n\n      parentRoute: typeUtil.LinkedRoute | void = routeStack[routeStack.length - 1]\n\n      path = formatPath(path, parentPath)\n\n      const route: typeUtil.LinkedRoute = { path, component, route: routeOptions },\n\n      params: string[] = []\n\n      Yox.array.each(\n        path.split(constant.SEPARATOR_PATH),\n        function (item) {\n          if (Yox.string.startsWith(item, constant.PREFIX_PARAM)) {\n            params.push(\n              item.substr(constant.PREFIX_PARAM.length)\n            )\n          }\n        }\n      )\n\n      if (params.length) {\n        route.params = params\n      }\n\n      if (parentRoute) {\n        route.parent = parentRoute\n      }\n\n      if (children) {\n        pathStack.push(path)\n        routeStack.push(route)\n        Yox.array.each(\n          children,\n          callback\n        )\n        routeStack.pop()\n        pathStack.pop()\n      }\n      else {\n\n        instance.routes.push(route)\n\n        if (name) {\n          if (process.env.NODE_ENV === 'dev') {\n            if (Yox.object.has(instance.name2Path, name)) {\n              Yox.logger.error(`Name[${name}] of the route is existed.`)\n              return\n            }\n          }\n          instance.name2Path[name] = path\n        }\n\n        if (process.env.NODE_ENV === 'dev') {\n          if (Yox.object.has(instance.path2Route, path)) {\n            Yox.logger.error(`path [${path}] of the route is existed.`)\n            return\n          }\n        }\n\n        instance.path2Route[path] = route\n\n      }\n\n    }\n\n    Yox.array.each(\n      routes,\n      callback\n    )\n\n    pathStack = routeStack = env.UNDEFINED\n\n  }\n\n  /**\n   * 真正执行路由切换操作的函数\n   *\n   * target 有 2 种格式：\n   *\n   * 如果只是简单的 path，直接传字符串\n   *\n   * push('/index')\n   *\n   * 如果需要带参数，可传对象\n   *\n   * push({\n   *   path: '/index',\n   *   params: { },\n   *   query: { }\n   * })\n   *\n   * 如果路由配置了 name，可用 name 代替 path，如下：\n   *\n   * push({\n   *   name: 'index'\n   * })\n   *\n   */\n  push(target: typeUtil.Target) {\n\n    let path: string, params: type.data | void, query: type.data | void\n\n    if (Yox.is.string(target)) {\n      path = target as string\n    }\n    else {\n      const route = target as typeUtil.RouteTarget, name = route.name\n      if (name) {\n        path = this.name2Path[name]\n        if (process.env.NODE_ENV === 'dev') {\n          if (!Yox.is.string(path)) {\n            Yox.logger.error(`Name[${name}] of the route is not found.`)\n            return\n          }\n        }\n      }\n      else {\n        path = route.path as string\n      }\n      params = route.params\n      query = route.query\n    }\n\n    this.setHash(path, params, query)\n\n  }\n\n  setHash(path: string, params: Object | void, query: Object | void) {\n\n    path = formatPath(path)\n\n    if (!this.path2Route[path]) {\n      path = this.route404.path\n    }\n\n    location.hash = constant.PREFIX_HASH + hashUtil.stringify(Yox, path, params, query)\n\n  }\n\n  /**\n   * 启动路由\n   */\n  start() {\n    domApi.on(window, 'hashchange', this.onChange as type.listener)\n    this.onChange()\n  }\n\n  /**\n   * 停止路由\n   */\n  stop() {\n    domApi.off(window, 'hashchange', this.onChange as type.listener)\n  }\n\n  /**\n   * 路由守卫\n   */\n  guard(route: typeUtil.LinkedRoute, name: string, callback?: () => void) {\n\n    // 必须是叶子节点\n    if (route.child) {\n      return\n    }\n\n    const instance = this, { hooks } = instance, { to, from } = hooks\n\n    if (!from || from.path !== to.path) {\n\n      hooks\n        .setName(name)\n        // 先调用组件的钩子\n        .add(route.options, route.context)\n        // 再调用路由配置的钩子\n        .add(route.route, route.route)\n        // 最后调用路由实例的钩子\n        .add(instance, instance)\n\n      const next = function (value?: false | typeUtil.Target) {\n        if (value === env.UNDEFINED) {\n          hooks.next(next, callback)\n        }\n        else if (value !== env.FALSE) {\n          // 跳转到别的路由\n          instance.push(value)\n        }\n      }\n\n      next()\n\n    }\n    else if (callback) {\n      callback()\n    }\n\n  }\n\n  /**\n   * 切换路由\n   */\n  private setRoute(location: typeUtil.Location, route: typeUtil.LinkedRoute) {\n\n    let instance = this,\n\n    oldRoute = instance.route,\n\n    newRoute = Yox.object.copy(route),\n\n    startRoute: typeUtil.LinkedRoute | void,\n\n    oldLocation = instance.location,\n\n    // 对比新旧两个路由链表\n    diffRoute = function (newRoute: typeUtil.LinkedRoute, oldRoute: typeUtil.LinkedRoute | void, childRoute: typeUtil.LinkedRoute | void, callback: (route: typeUtil.LinkedRoute) => void) {\n      // 不论是同步还是异步组件，都可以通过 registry.loadComponent 取到 options\n      registry.loadComponent(\n        newRoute.component,\n        function (options) {\n\n          newRoute.options = options\n\n          // 更新链路\n          if (childRoute) {\n            newRoute.child = childRoute\n            childRoute.parent = newRoute\n          }\n\n          if (oldRoute) {\n            // 同级的两个组件不同，疑似起始更新的路由\n            if (oldRoute.options !== options) {\n              startRoute = newRoute\n            }\n            else {\n              // 把上次的组件实例搞过来\n              newRoute.context = oldRoute.context\n            }\n          }\n          else {\n            startRoute = newRoute\n          }\n\n          if (newRoute.parent) {\n            diffRoute(\n              Yox.object.copy(newRoute.parent),\n              oldRoute ? oldRoute.parent : env.UNDEFINED,\n              newRoute,\n              callback\n            )\n            return\n          }\n\n          // 到达根组件，结束\n          callback(newRoute)\n\n        }\n      )\n    },\n\n    updateRoute = function (route: typeUtil.LinkedRoute) {\n      // 从上往下更新 props\n      while (env.TRUE) {\n\n        let { parent, context, component, options } = route\n\n        if (route === startRoute) {\n\n          if (parent) {\n\n            context = parent.context as Yox\n            context.forceUpdate(\n              filterProps(parent, location, parent.options as YoxOptions)\n            )\n\n            context = context[OUTLET]\n            if (context) {\n              const props = {}\n              props[COMPONENT] = component\n              context[ROUTE] = route\n              context.component(component, options)\n              context.forceUpdate(props)\n            }\n\n          }\n          else {\n\n            if (context) {\n              context.destroy()\n              const oldRoute = context[ROUTE]\n              oldRoute.context = env.UNDEFINED\n              instance.guard(oldRoute, constant.HOOK_AFTER_LEAVE)\n            }\n\n            // 每层路由组件都有 $route 和 $router 属性\n            const extensions = {}\n            extensions[ROUTER] = instance\n            extensions[ROUTE] = route\n\n            route.context = new Yox(\n              Yox.object.extend(\n                {\n                  el: instance.el,\n                  props: filterProps(route, location, options as YoxOptions),\n                  extensions,\n                },\n                options as YoxOptions\n              )\n            )\n\n            instance.guard(route, constant.HOOK_AFTER_ENTER)\n\n          }\n\n        }\n\n        else if (context) {\n          context[ROUTE] = route\n          context.forceUpdate(\n            filterProps(route, location, options as YoxOptions)\n          )\n          // 如果 <router-view> 定义在 if 里\n          // 当 router-view 从无到有时，这里要读取最新的 child\n          // 当 router-view 从有到无时，这里要判断它是否存在\n          if (context[OUTLET] && route.child) {\n            route = route.child as typeUtil.LinkedRoute\n            continue\n          }\n        }\n        break\n      }\n    },\n\n    enterRoute = function (route: typeUtil.LinkedRoute) {\n      instance.guard(\n        newRoute,\n        constant.HOOK_BEFORE_ENTER,\n        function () {\n\n          instance.route = newRoute\n          instance.location = location\n\n          updateRoute(route)\n\n        }\n      )\n    }\n\n    instance.hooks.setLocation(location, oldLocation)\n\n    // 先确保加载到组件 options，这样才能在 guard 方法中调用 options 的路由钩子\n    diffRoute(\n      newRoute,\n      oldRoute,\n      env.UNDEFINED,\n      function (route) {\n\n        if (oldRoute) {\n          instance.guard(\n            oldRoute,\n            constant.HOOK_BEFORE_LEAVE,\n            function () {\n              enterRoute(route)\n            }\n          )\n        }\n        else {\n          enterRoute(route)\n        }\n\n      }\n    )\n\n  }\n\n}\n\nconst directive = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // 当前组件如果是根组件，则没有 $root 属性\n    const $root = vnode.context.$root || vnode.context,\n\n    router = $root[ROUTER] as Router,\n\n    listener = function (_: CustomEvent) {\n      const value = directive.getter && directive.getter()\n      router.push(value != env.NULL ? value : directive.value)\n    }\n\n    if (vnode.isComponent) {\n      (node as Yox).on(EVENT_CLICK, listener)\n      vnode.data[directive.key] = function () {\n        (node as Yox).off(EVENT_CLICK, listener)\n      }\n    }\n    else {\n      domApi.on(node as HTMLElement, EVENT_CLICK, listener)\n      vnode.data[directive.key] = function () {\n        domApi.off(node as HTMLElement, EVENT_CLICK, listener)\n      }\n    }\n\n  },\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    vnode.data[directive.key]()\n  },\n}\n\nconst RouterView: YoxOptions = {\n  template: '<$' + COMPONENT + '/>',\n  beforeCreate(options) {\n\n    const $parent = options.parent as Yox,\n\n    route = $parent[ROUTE].child as typeUtil.LinkedRoute\n\n    if (route) {\n\n      $parent[OUTLET] = this\n\n      const props = {}, components = {}\n\n      props[COMPONENT] = route.component\n      components[route.component] = route.options\n\n      options.props = props\n      options.components = components\n\n    }\n\n  },\n  beforeDestroy() {\n    this.$parent[OUTLET] = env.UNDEFINED\n  },\n  beforeChildCreate(childOptions: YoxOptions) {\n\n    const { $parent } = this,\n\n    router = $parent[ROUTER] as Router,\n\n    route = $parent[ROUTE].child as typeUtil.LinkedRoute,\n\n    extensions = {}\n\n    extensions[ROUTE] = route\n    extensions[ROUTER] = router\n\n    if (router.location) {\n      childOptions.props = filterProps(route, router.location, childOptions)\n    }\n\n    childOptions.extensions = extensions\n\n  },\n  afterChildCreate(child: Yox) {\n\n    const router = child[ROUTER] as Router,\n\n    route = child[ROUTE] as typeUtil.LinkedRoute\n\n    if (route) {\n      route.context = child\n      router.guard(route, constant.HOOK_AFTER_ENTER)\n    }\n\n  },\n  beforeChildDestroy(child: Yox) {\n\n    const router = child[ROUTER] as Router,\n\n    route = child[ROUTE] as typeUtil.LinkedRoute\n\n    if (route) {\n      route.context = env.UNDEFINED\n      router.guard(route, constant.HOOK_AFTER_LEAVE)\n    }\n\n  }\n}\n\n/**\n * 版本\n */\nexport const version = process.env.NODE_VERSION\n\n/**\n * 注册全局组件，路由实例可共享\n */\nexport function register(\n  name: string | Record<string, type.component>,\n  component?: type.component\n): void {\n  registry.component(name, component)\n}\n\n/**\n * 安装插件\n */\nexport function install(Class: YoxClass): void {\n\n  Yox = Class\n  registry = new Class()\n  domApi = Class.dom as API\n\n  Yox.directive('href', directive)\n\n  // 提供两种风格\n  Yox.component({\n    RouterView: RouterView,\n    'router-view': RouterView,\n  })\n\n}\n"],"names":["const","env.RAW_TRUE","env.TRUE","env.RAW_FALSE","env.FALSE","env.RAW_NULL","env.NULL","env.RAW_UNDEFINED","env.UNDEFINED","parse","valueUtil.parse","stringify","valueUtil.stringify","constant.SEPARATOR_PATH","constant.PREFIX_PARAM","constant.SEPARATOR_SEARCH","queryUtil.parse","env.EMPTY_STRING","queryUtil.stringify","constant.PREFIX_HASH","hashUtil.parse","hashUtil.stringify","constant.HOOK_AFTER_LEAVE","constant.HOOK_AFTER_ENTER","constant.HOOK_BEFORE_ENTER","constant.HOOK_BEFORE_LEAVE"],"mappings":"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"}