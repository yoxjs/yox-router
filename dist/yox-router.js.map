{"version":3,"file":"yox-router.js","sources":["../src/constant.ts","../../yox-config/src/config.ts","../../yox-common/src/util/env.ts","../src/Hooks.ts","../src/util/value.ts","../src/util/query.ts","../src/mode/hash.ts","../src/mode/history.ts","../src/Router.ts"],"sourcesContent":["export const WINDOW = window\n\nexport const LOCATION = WINDOW.location\nexport const HISTORY = WINDOW.history\n\n// path 中的参数前缀，如 /user/:userId\nexport const PREFIX_PARAM = ':'\n\n// path 分隔符\nexport const SEPARATOR_PATH = '/'\n\n// path 和 search 的分隔符\nexport const SEPARATOR_SEARCH = '?'\n\n// query 分隔符\nexport const SEPARATOR_QUERY = '&'\n\n// 键值对分隔符\nexport const SEPARATOR_PAIR = '='\n\n// 参数中的数组标识\nexport const FLAG_ARRAY = '[]'\n\n// 导航钩子 - 路由进入之前\nexport const ROUTER_HOOK_BEFORE_ENTER = 'beforeEnter'\n\n// 导航钩子 - 路由进入之后\nexport const ROUTER_HOOK_AFTER_ENTER = 'afterEnter'\n\n// 导航钩子 - 路由更新之前\nexport const ROUTER_HOOK_BEFORE_UPDATE = 'beforeUpdate'\n\n// 导航钩子 - 路由更新之后\nexport const ROUTER_HOOK_AFTER_UPDATE = 'afterUpdate'\n\n// 导航钩子 - 路由离开之前\nexport const ROUTER_HOOK_BEFORE_LEAVE = 'beforeLeave'\n\n// 导航钩子 - 路由离开之后\nexport const ROUTER_HOOK_AFTER_LEAVE = 'afterLeave'","export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\nexport const SLOT_NAME_DEFAULT = 'children'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const MODIFER_NATIVE = 'native'\n\nexport const MODEL_PROP_DEFAULT = 'value'\n\nexport const NAMESPACE_HOOK = '.hook'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n\n// 路由钩子\nexport const HOOK_BEFORE_ROUTE_ENTER = 'beforeRouteEnter'\nexport const HOOK_AFTER_ROUTE_ENTER = 'afterRouteEnter'\nexport const HOOK_BEFORE_ROUTE_UPDATE = 'beforeRouteUpdate'\nexport const HOOK_AFTER_ROUTE_UPDATE = 'afterRouteUpdate'\nexport const HOOK_BEFORE_ROUTE_LEAVE = 'beforeRouteLeave'\nexport const HOOK_AFTER_ROUTE_LEAVE = 'afterRouteLeave'\n","/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\nexport const MINUS_ONE = -1\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\nexport const RAW_DOT = '.'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * Single instance for global in nodejs or browser\n */\nexport const GLOBAL = typeof global !== RAW_UNDEFINED ? global : WINDOW\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.addSpecialEvent 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''\n","import {\n  Task,\n} from '../../yox-type/src/type'\n\nimport {\n  Location,\n} from '../../yox-type/src/router'\n\nimport {\n  Callback,\n} from './type'\n\nexport default class Hooks {\n\n  list: Task[]\n\n  to: Location\n\n  from: Location | void\n\n  setLocation(to: Location, from: Location | void) {\n    this.to = to\n    this.from = from\n    return this\n  }\n\n  clear() {\n    this.list = []\n    return this\n  }\n\n  add(hook: Function | void, ctx: any) {\n    const { list } = this\n    if (hook) {\n      list.push({\n        fn: hook,\n        ctx,\n      })\n    }\n    return this\n  }\n\n  next(next: Function, isGuard?: boolean, callback?: Callback) {\n    const task = this.list.shift()\n    if (task) {\n      if (isGuard) {\n        task.fn.call(task.ctx, this.to, this.from, next)\n      }\n      else {\n        task.fn.call(task.ctx, this.to, this.from)\n        next()\n      }\n    }\n    else if (callback) {\n      callback()\n    }\n  }\n\n}","import { API } from '../type'\n\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 把字符串 value 解析成最合适的类型\n */\nexport function parse(API: API, value: string) {\n  let result: any\n  if (API.is.numeric(value)) {\n    result = +value\n  }\n  else if (API.is.string(value)) {\n    if (value === env.RAW_TRUE) {\n      result = env.TRUE\n    }\n    else if (value === env.RAW_FALSE) {\n      result = env.FALSE\n    }\n    else if (value === env.RAW_NULL) {\n      result = env.NULL\n    }\n    else {\n      result = decodeURIComponent(value)\n    }\n  }\n  return result\n}\n\nexport function stringify(API: API, value: any): string | void {\n  if (API.is.string(value)) {\n    return encodeURIComponent(value)\n  }\n  else if (API.is.number(value) || API.is.boolean(value)) {\n    return value.toString()\n  }\n  else if (value === env.NULL) {\n    return env.RAW_NULL\n  }\n}","import { API } from '../type'\n\nimport * as constant from '../constant'\nimport * as valueUtil from './value'\n\n/**\n * 把 GET 参数解析成对象\n */\nexport function parse(API: API, query: string) {\n  let result: object | undefined\n  API.array.each(\n    query.split(constant.SEPARATOR_QUERY),\n    function (term) {\n\n      let terms = term.split(constant.SEPARATOR_PAIR),\n\n      key = API.string.trim(terms[0]),\n\n      value = terms[1]\n\n      if (key) {\n        if (!result) {\n          result = {}\n        }\n        value = valueUtil.parse(API, value)\n        if (API.string.endsWith(key, constant.FLAG_ARRAY)) {\n          key = API.string.slice(key, 0, -constant.FLAG_ARRAY.length)\n          API.array.push(\n            result[key] || (result[key] = []),\n            value\n          )\n        }\n        else {\n          result[key] = value\n        }\n      }\n\n    }\n  )\n  return result\n}\n\n/**\n * 把对象解析成 key1=value1&key2=value2\n */\nexport function stringify(API: API, query: object) {\n  const result: string[] = []\n  for (let key in query) {\n    const value = query[key]\n    if (API.is.array(value)) {\n      API.array.each(\n        value,\n        function (value) {\n          const str = valueUtil.stringify(API, value)\n          if (API.is.string(str)) {\n            result.push(\n              key + constant.FLAG_ARRAY + constant.SEPARATOR_PAIR + str\n            )\n          }\n        }\n      )\n    }\n    else {\n      const str = valueUtil.stringify(API, value)\n      if (API.is.string(str)) {\n        result.push(\n          key + constant.SEPARATOR_PAIR + str\n        )\n      }\n    }\n  }\n  return result.join(constant.SEPARATOR_QUERY)\n}\n","import {\n  Location,\n} from '../../../yox-type/src/router'\n\nimport {\n  DomApi,\n} from '../../../yox-type/src/api'\n\nimport {\n  Listener,\n} from '../../../yox-type/src/type'\n\nimport * as constant from '../constant'\n\n// hash 前缀，Google 的规范是 #! 开头，如 #!/path/sub?key=value\nconst HASH_PREFIX = '#!',\n\nHASH_CHANGE = 'hashchange'\n\nexport function start(domApi: DomApi, handler: Function) {\n  domApi.on(constant.WINDOW, HASH_CHANGE, handler as Listener)\n  handler()\n}\n\nexport function stop(domApi: DomApi, handler: Function) {\n  domApi.off(constant.WINDOW, HASH_CHANGE, handler as Listener)\n}\n\nexport function push(location: Location, handler: Function) {\n  constant.LOCATION.hash = HASH_PREFIX + location.url\n}\n\nexport function go(n: number) {\n  constant.HISTORY.go(n)\n}\n\nexport function current() {\n\n  // 不能直接读取 window.location.hash\n  // 因为 Firefox 会做 pre-decode\n  const href = constant.LOCATION.href, index = href.indexOf(HASH_PREFIX)\n\n  return index > 0\n    ? href.substr(index + HASH_PREFIX.length)\n    : constant.SEPARATOR_PATH\n\n}\n","import {\n  Location,\n} from '../../../yox-type/src/router'\n\nimport {\n  DomApi,\n} from '../../../yox-type/src/api'\n\nimport {\n  Listener,\n} from '../../../yox-type/src/type'\n\nimport * as constant from '../constant'\n\nconst POP_STATE = 'popstate'\n\nexport const isSupported = 'pushState' in constant.HISTORY\n\nexport function start(domApi: DomApi, handler: Function) {\n  domApi.on(constant.WINDOW, POP_STATE, handler as Listener)\n  handler()\n}\n\nexport function stop(domApi: DomApi, handler: Function) {\n  domApi.off(constant.WINDOW, POP_STATE, handler as Listener)\n}\n\nexport function push(location: Location, handler: Function) {\n  // 调用 pushState 不会触发 popstate 事件\n  // 因此这里需要手动调用一次 handler\n  constant.HISTORY.pushState({}, '', location.url)\n  handler()\n}\n\nexport function go(n: number) {\n  constant.HISTORY.go(n)\n}\n\nexport function current() {\n  return constant.LOCATION.pathname + constant.LOCATION.search\n}\n","import {\n  Data,\n  Listener,\n} from '../../yox-type/src/type'\n\nimport {\n  Location,\n  RouteTarget,\n} from '../../yox-type/src/router'\n\nimport {\n  VNode,\n  Directive,\n} from '../../yox-type/src/vnode'\n\nimport {\n  ComponentOptions,\n} from '../../yox-type/src/options'\n\nimport {\n  CustomEventInterface,\n} from '../../yox-type/src/emitter'\n\nimport {\n  YoxInterface,\n} from '../../yox-type/src/yox'\n\nimport {\n  ROUTER_HOOK_BEFORE_ENTER,\n  ROUTER_HOOK_AFTER_ENTER,\n  ROUTER_HOOK_BEFORE_UPDATE,\n  ROUTER_HOOK_AFTER_UPDATE,\n  ROUTER_HOOK_BEFORE_LEAVE,\n  ROUTER_HOOK_AFTER_LEAVE,\n  SEPARATOR_PATH,\n  PREFIX_PARAM,\n  SEPARATOR_SEARCH,\n} from './constant'\n\nimport {\n  API,\n  Mode,\n  Target,\n  RouterOptions,\n  RouteOptions,\n  LinkedRoute,\n  Pending,\n  Callback,\n  Redirect,\n  RouteCallback,\n} from './type'\n\nimport * as config from '../../yox-config/src/config'\n\nimport * as env from '../../yox-common/src/util/env'\n\nimport Hooks from './Hooks'\nimport * as queryUtil from './util/query'\nimport * as valueUtil from './util/value'\n\nimport * as hashMode from './mode/hash'\nimport * as historyMode from './mode/history'\n\nlet API: API, hookEvents: Record<string, Listener>, guid = 0\n\nconst ROUTER = '$router',\n\nROUTE = '$route',\n\nROUTE_VIEW = '$routeView',\n\nROUTE_COMPONENT = 'RouteComponent',\n\nEVENT_CLICK = 'click'\n\n/**\n * 格式化路径，确保它以 / 开头，不以 / 结尾\n */\nfunction formatPath(path: string, parentPath: string | void) {\n\n  // 如果不是 / 开头，表示是相对路径\n  if (!API.string.startsWith(path, SEPARATOR_PATH)) {\n    // 确保 parentPath 以 / 结尾\n    if (parentPath) {\n      if (!API.string.endsWith(parentPath, SEPARATOR_PATH)) {\n        parentPath += SEPARATOR_PATH\n      }\n    }\n    else {\n      parentPath = SEPARATOR_PATH\n    }\n    path = parentPath + path\n  }\n\n  // 如果 path 以 / 结尾，删掉它\n  if (path !== SEPARATOR_PATH\n    && API.string.endsWith(path, SEPARATOR_PATH)\n  ) {\n    path = API.string.slice(path, 0, -SEPARATOR_PATH.length)\n  }\n\n  return path\n\n}\n\n/**\n * 把结构化数据序列化成 url\n */\nfunction stringifyUrl(path: string, params: Data | void, query: Data | void) {\n\n  if (/\\/\\:\\w+/.test(path)) {\n\n    const terms: string[] = []\n\n    API.array.each(\n      path.split(SEPARATOR_PATH),\n      function (item) {\n        terms.push(\n          API.string.startsWith(item, PREFIX_PARAM) && params\n            ? params[item.substr(PREFIX_PARAM.length)]\n            : item\n        )\n      }\n    )\n\n    path = terms.join(SEPARATOR_PATH)\n\n  }\n\n  if (query) {\n    const queryStr = queryUtil.stringify(API, query)\n    if (queryStr) {\n      path += SEPARATOR_SEARCH + queryStr\n    }\n  }\n\n  return path\n\n}\n\nfunction toUrl(target: Target, name2Path: Data): string {\n\n  if (API.is.string(target)) {\n    return formatPath(target as string)\n  }\n\n  let route = target as RouteTarget, name = route.name, path: string\n  if (name) {\n    path = name2Path[name]\n    if (process.env.NODE_ENV === 'development') {\n      if (!API.is.string(path)) {\n        API.logger.error(`The route of name[${name}] is not found.`)\n      }\n    }\n  }\n  else {\n    path = formatPath(route.path as string)\n  }\n\n  return stringifyUrl(path, route.params, route.query)\n\n}\n\n/**\n * 按照 propTypes 定义的外部数据格式过滤路由参数，这样有两个好处：\n *\n * 1. 避免传入不符预期的数据\n * 2. 避免覆盖 data 定义的数据\n */\nfunction filterProps(route: LinkedRoute, location: Location, options: ComponentOptions) {\n  const result: Data = {}, propTypes = options.propTypes\n  if (propTypes) {\n\n    let props = location.query,\n\n    routeParams = route.params,\n\n    locationParams = location.params\n\n    // 从 location.params 挑出 route.params 定义过的参数\n    if (routeParams && locationParams) {\n      props = props ? API.object.copy(props) : {}\n      for (let i = 0, length = routeParams.length; i < length; i++) {\n        (props as Data)[routeParams[i]] = locationParams[routeParams[i]]\n      }\n    }\n\n    if (props) {\n      for (let key in propTypes) {\n        let value = props[key]\n        if (value !== env.UNDEFINED) {\n          result[key] = value\n        }\n      }\n    }\n\n  }\n  return result\n}\n\n/**\n * 是否是叶子节点\n * 如果把叶子节点放在 if 中，会出现即使不是定义时的叶子节点，却是运行时的叶子节点\n */\nfunction isLeafRoute(route: LinkedRoute) {\n  const child = route.child\n  return !child || !child.context\n}\n\nfunction updateRoute(instance: YoxInterface, componentHookName: string | void, hookName: string | undefined, upsert?: boolean) {\n  const route = instance[ROUTE] as LinkedRoute\n  if (route) {\n    route.context = upsert ? instance : env.UNDEFINED\n    if (isLeafRoute(route)) {\n      const router = instance[ROUTER] as Router\n      if (componentHookName && hookName) {\n        router.hook(route, componentHookName, hookName)\n      }\n      if (upsert) {\n        const { pending } = router\n        if (pending) {\n          pending.onComplete()\n          router.pending = env.UNDEFINED\n        }\n      }\n    }\n  }\n}\n\nexport class Router {\n\n  el: Element\n\n  options: RouterOptions\n\n  routes: LinkedRoute[]\n\n  route404: LinkedRoute\n\n  name2Path: Record<string, string>\n\n  path2Route: Record<string, LinkedRoute>\n\n  mode: Mode\n\n  history: Location[]\n\n  cursor: number\n\n  pending?: Pending\n\n  // 路由钩子\n  hooks: Hooks\n\n  // 路由或参数发生了变化会触发此函数\n  handler: Function\n\n  // 当前渲染的路由\n  route?: LinkedRoute\n\n  // 当前地址栏的路径和参数\n  location?: Location\n\n  constructor(options: RouterOptions) {\n\n    const instance = this, el = options.el, route404 = options.route404 || default404\n\n    instance.options = options\n\n    instance.el = API.is.string(el)\n      ? API.dom.find(el as string) as Element\n      : el as Element\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!instance.el) {\n        API.logger.error(`router.el is not an element.`)\n        return\n      }\n    }\n\n    instance.mode = options.mode === 'history' && historyMode.isSupported ? historyMode : hashMode\n\n    instance.handler = function () {\n\n      const url = instance.mode.current(), { pending } = instance\n\n      if (pending) {\n        const { location } = pending\n        // 通过 push 或 go 触发\n        if (location.url === url) {\n          instance.setHistory(location, pending.cursor)\n          instance.setRoute(location)\n          return\n        }\n        instance.pending = env.UNDEFINED\n      }\n\n      // 直接修改地址栏触发\n      instance.parseLocation(\n        url,\n        function (location) {\n          if (location) {\n            instance.setHistory(location)\n            instance.setRoute(location)\n          }\n          else {\n            instance.push(instance.route404)\n          }\n        }\n      )\n    }\n\n    instance.routes = []\n    instance.name2Path = {}\n    instance.path2Route = {}\n\n    instance.history = []\n    instance.cursor = -1\n\n    instance.hooks = new Hooks()\n\n    API.array.each(\n      options.routes,\n      function (route) {\n        instance.add(route)\n      }\n    )\n\n    instance.route404 = instance.add(route404)[0]\n\n  }\n\n  /**\n   * 添加一个新的路由\n   */\n  add(routeOptions: RouteOptions) {\n\n    const instance = this,\n\n    newRoutes: LinkedRoute[] = [],\n\n    pathStack: string[] = [],\n\n    routeStack: LinkedRoute[] = [],\n\n    addRoute = function (routeOptions: RouteOptions) {\n\n      let { name, component, children, load } = routeOptions,\n\n      parentPath = API.array.last(pathStack),\n\n      parentRoute = API.array.last(routeStack),\n\n      path = formatPath(routeOptions.path, parentPath),\n\n      route: LinkedRoute = { path, route: routeOptions },\n\n      params: string[] = []\n\n      API.array.each(\n        path.split(SEPARATOR_PATH),\n        function (item) {\n          if (API.string.startsWith(item, PREFIX_PARAM)) {\n            params.push(\n              item.substr(PREFIX_PARAM.length)\n            )\n          }\n        }\n      )\n\n      if (params.length) {\n        route.params = params\n      }\n\n      if (name) {\n        route.name = name\n      }\n\n      // component 和 load 二选一\n      if (component) {\n        route.component = component\n      }\n      else if (load) {\n        route.load = load\n      }\n\n      if (parentRoute) {\n        route.parent = parentRoute\n      }\n\n      if (children) {\n        pathStack.push(path)\n        routeStack.push(route)\n        API.array.each(\n          children,\n          addRoute\n        )\n        routeStack.pop()\n        pathStack.pop()\n      }\n      else {\n\n        newRoutes.push(route)\n        instance.routes.push(route)\n\n        if (name) {\n          if (process.env.NODE_ENV === 'development') {\n            if (API.object.has(instance.name2Path, name)) {\n              API.logger.error(`Name[${name}] of the route is existed.`)\n              return\n            }\n          }\n          instance.name2Path[name] = path\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          if (API.object.has(instance.path2Route, path)) {\n            API.logger.error(`path [${path}] of the route is existed.`)\n            return\n          }\n        }\n\n        instance.path2Route[path] = route\n\n      }\n\n    }\n\n    addRoute(routeOptions)\n\n    return newRoutes\n\n  }\n\n  /**\n   * 删除一个已注册的路由\n   */\n  remove(route: LinkedRoute) {\n\n    const instance = this\n\n    API.array.remove(instance.routes, route)\n\n    if (route.name) {\n      delete instance.name2Path[route.name]\n    }\n\n    delete instance.path2Route[route.path]\n\n  }\n\n  /**\n   * target 有 3 种格式：\n   *\n   * 如果只是简单的 path，直接传字符串\n   *\n   * push('/index')\n   *\n   * 如果需要带参数，可传对象\n   *\n   * push({\n   *   path: '/index',\n   *   params: { },\n   *   query: { }\n   * })\n   *\n   * 如果路由配置了 name，可用 name 代替 path，如下：\n   *\n   * push({\n   *   name: 'index'\n   * })\n   *\n   */\n  push(target: Target) {\n\n    const instance = this, { mode } = instance\n\n    instance.setUrl(\n      toUrl(target, instance.name2Path),\n      env.EMPTY_FUNCTION,\n      env.EMPTY_FUNCTION,\n      function (location, pending) {\n        instance.pending = pending\n        if (mode.current() !== location.url) {\n          mode.push(location, instance.handler)\n        }\n        else {\n          instance.setRoute(location)\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 不改变 URL，只修改路由组件\n   */\n  replace(target: Target) {\n\n    const instance = this\n\n    instance.setUrl(\n      toUrl(target, instance.name2Path),\n      function () {\n        instance.replaceHistory(instance.location as Location)\n      },\n      env.EMPTY_FUNCTION,\n      function (location, pending) {\n        instance.pending = pending\n        instance.setRoute(location)\n      }\n    )\n\n  }\n\n  /**\n   * 前进或后退 n 步\n   */\n  go(n: number) {\n\n    const instance = this,\n\n    { mode } = instance,\n\n    cursor = instance.cursor + n,\n\n    location = instance.history[cursor]\n\n    if (location) {\n      instance.setUrl(\n        stringifyUrl(location.path, location.params, location.query),\n        env.EMPTY_FUNCTION,\n        env.EMPTY_FUNCTION,\n        function (location, pending) {\n          pending.cursor = cursor\n          instance.pending = pending\n\n          if (mode.current() !== location.url) {\n            mode.go(n)\n          }\n          else {\n            instance.setHistory(location, cursor)\n            instance.setRoute(location)\n          }\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 启动路由\n   */\n  start() {\n    this.mode.start(API.dom, this.handler)\n  }\n\n  /**\n   * 停止路由\n   */\n  stop() {\n    this.mode.stop(API.dom, this.handler)\n  }\n\n  /**\n   * 钩子函数\n   */\n  hook(route: LinkedRoute, componentHook: string, hook: string, isGuard?: boolean, callback?: Callback) {\n\n    const instance = this, { location, hooks, pending } = instance\n\n    hooks\n      .clear()\n      // 先调用组件的钩子\n      .add((route.component as ComponentOptions)[componentHook], route.context)\n      // 再调用路由配置的钩子\n      .add(route.route[hook], route.route)\n      // 最后调用路由实例的钩子\n      .add(instance.options[hook], instance)\n\n    const next = function (value?: false | Target) {\n      if (value === env.UNDEFINED) {\n        hooks.next(next, isGuard, callback)\n      }\n      else {\n        // 只有前置守卫才有可能走进这里\n        // 此时 instance.location 还是旧地址\n        if (pending) {\n          pending.onAbort()\n          instance.pending = env.UNDEFINED\n        }\n        if (value === env.FALSE) {\n          if (location) {\n            instance.push(location)\n          }\n        }\n        else {\n          // 跳转到别的路由\n          instance.push(value)\n        }\n      }\n    }\n\n    next()\n\n  }\n\n  private setHistory(location: Location, index: number | void) {\n\n    const { history, cursor } = this\n\n    // 如果没传 cursor，表示 push\n    if (!API.is.number(index)) {\n      index = cursor + 1\n      // 确保下一个为空\n      // 如果不为空，肯定是调用过 go()，此时直接清掉后面的就行了\n      if (history[index]) {\n        history.length = index\n      }\n    }\n\n    history[index as number] = location\n\n    this.cursor = index as number\n\n  }\n\n  private replaceHistory(location: Location) {\n    const { history, cursor } = this\n    if (history[cursor]) {\n      history[cursor] = location\n    }\n  }\n\n  private setUrl(\n    url: string,\n    onComplete: Callback,\n    onAbort: Callback,\n    callback: (locaiton: Location, pending: Pending) => void\n  ) {\n\n    // 这里无需判断新旧 url 是否相同，因为存在 replace，即使它们相同也不等价于不用跳转\n    const instance = this\n\n    instance.parseLocation(\n      url,\n      function (location) {\n\n        if (location) {\n          callback(\n            location,\n            {\n              location,\n              onComplete,\n              onAbort,\n            }\n          )\n        }\n        else if (process.env.NODE_ENV === 'development') {\n          API.logger.error(`\"${url}\" can't match a route.`)\n        }\n\n      }\n    )\n\n  }\n\n  private parseLocation(url: string, callback: (location?: Location) => void) {\n\n    let realpath: string, search: string | void, index = url.indexOf(SEPARATOR_SEARCH)\n\n    if (index >= 0) {\n      realpath = url.slice(0, index)\n      search = url.slice(index + 1)\n    }\n    else {\n      realpath = url\n    }\n\n    // 匹配已注册的 route\n    const instance = this,\n\n    realpathTerms = realpath.split(SEPARATOR_PATH),\n\n    length = realpathTerms.length,\n\n    matchRoute = function (\n      routes: LinkedRoute[],\n      callback: (route?: LinkedRoute, params?: Data) => void\n    ) {\n\n      let index = 0, route: LinkedRoute | void\n\n      loop: while (route = routes[index++]) {\n        const path = route.path\n\n        // 动态路由\n        if (route.params) {\n          const pathTerms = path.split(SEPARATOR_PATH)\n          // path 段数量必须一致，否则没有比较的意义\n          if (length === pathTerms.length) {\n            const params: Data = {}\n            for (let i = 0; i < length; i++) {\n              if (API.string.startsWith(pathTerms[i], PREFIX_PARAM)) {\n                params[pathTerms[i].substr(PREFIX_PARAM.length)] = valueUtil.parse(API, realpathTerms[i])\n              }\n              // 非参数段不相同\n              else if (pathTerms[i] !== realpathTerms[i]) {\n                continue loop\n              }\n            }\n            callback(route, params)\n            return\n          }\n        }\n        // 懒加载路由，前缀匹配成功后，意味着懒加载回来的路由一定有我们想要的\n        else if (route.load && API.string.startsWith(realpath, path)) {\n          const routeCallback: RouteCallback = function (lazyRoute) {\n            instance.remove(route as LinkedRoute)\n            matchRoute(\n              instance.add(lazyRoute['default'] || lazyRoute),\n              callback\n            )\n          }\n          const promise = route.load(routeCallback)\n          if (promise) {\n            promise.then(routeCallback)\n          }\n          return\n        }\n        else if (path === realpath) {\n          callback(route)\n          return\n        }\n      }\n\n      callback()\n\n    }\n\n    matchRoute(\n      instance.routes,\n      function (route, params) {\n        if (route) {\n          const location: Location = {\n            url,\n            path: route.path\n          }\n          if (params) {\n            location.params = params\n          }\n          if (search) {\n            const query = queryUtil.parse(API, search)\n            if (query) {\n              location.query = query\n            }\n          }\n          callback(location)\n        }\n        else {\n          callback()\n        }\n      }\n    )\n\n  }\n\n  private diffRoute(\n    route: LinkedRoute,\n    oldRoute: LinkedRoute | void,\n    onComplete: (route: LinkedRoute, startRoute: LinkedRoute | void) => void,\n    startRoute: LinkedRoute | void,\n    childRoute: LinkedRoute | void,\n    oldTopRoute: LinkedRoute | void\n  ) {\n\n    // 更新链路\n    if (childRoute) {\n      route.child = childRoute\n      childRoute.parent = route\n    }\n\n    if (oldRoute) {\n      // 同级的两个组件不同，疑似起始更新的路由\n      if (oldRoute.component !== route.component) {\n        startRoute = route\n      }\n      else {\n        // 把上次的组件实例搞过来\n        route.context = oldRoute.context\n      }\n    }\n    else {\n      startRoute = route\n    }\n\n    if (route.parent) {\n      this.diffRoute(\n        API.object.copy(route.parent),\n        oldRoute ? oldRoute.parent : env.UNDEFINED,\n        onComplete,\n        startRoute,\n        route,\n        oldRoute || oldTopRoute\n      )\n      return\n    }\n\n    // 整个组件树全换掉\n    if (startRoute === route) {\n      let context: YoxInterface | void\n      // 当层级较多的路由切换到层级较少的路由\n      if (oldRoute) {\n        while (oldRoute) {\n          context = oldRoute.context\n          oldRoute = oldRoute.parent\n        }\n      }\n      // 当层级较少的路由切换到层级较多的路由\n      else if (oldTopRoute) {\n        context = oldTopRoute.context\n      }\n      if (context) {\n        startRoute.context = context\n      }\n    }\n\n    // 到达根组件，结束\n    onComplete(route, startRoute)\n\n  }\n\n  private patchRoute(\n    route: LinkedRoute,\n    startRoute: LinkedRoute | void\n  ) {\n\n    const instance = this, location = instance.location as Location\n\n    // 从上往下更新 props\n    while (route) {\n\n      let { parent, context, component } = route\n\n      if (route === startRoute) {\n\n        if (parent) {\n\n          context = parent.context as YoxInterface\n          context.forceUpdate(\n            filterProps(\n              parent,\n              location,\n              parent.component as ComponentOptions\n            )\n          )\n\n          context = context[ROUTE_VIEW]\n          if (context) {\n            const props = {}, name = ROUTE_COMPONENT + (++guid)\n            props[ROUTE_COMPONENT] = name\n            context.component(name, component)\n            context.forceUpdate(props)\n          }\n\n        }\n        else {\n\n          if (context) {\n            context.destroy()\n          }\n\n          // 每层路由组件都有 $route 和 $router 属性\n          const extensions = {}\n          extensions[ROUTER] = instance\n          extensions[ROUTE] = route\n\n          const options: ComponentOptions = API.object.extend(\n            {\n              el: instance.el,\n              props: filterProps(route, location, component as ComponentOptions),\n              extensions,\n            },\n            component as ComponentOptions\n          )\n\n          options.events = options.events\n            ? API.object.extend(options.events, hookEvents)\n            : hookEvents\n\n          route.context = new API(options)\n\n        }\n\n      }\n\n      else if (context) {\n        if (context.$vnode) {\n          context[ROUTE] = route\n          context.forceUpdate(\n            filterProps(route, location, component as ComponentOptions)\n          )\n        }\n        else {\n          route.context = env.UNDEFINED\n        }\n        if (route.child) {\n          route = route.child as LinkedRoute\n          continue\n        }\n      }\n      break\n    }\n  }\n\n  private setRoute(location: Location) {\n\n    let instance = this,\n\n    linkedRoute = instance.path2Route[location.path],\n\n    redirect = linkedRoute.route.redirect\n\n    if (redirect) {\n      if (API.is.func(redirect)) {\n        redirect = (redirect as Redirect)(location)\n      }\n      if (redirect) {\n        instance.push(redirect as Target)\n        return\n      }\n    }\n\n    const newRoute = API.object.copy(linkedRoute),\n\n    oldRoute = instance.route,\n\n    oldLocation = instance.location,\n\n    enterRoute = function () {\n      instance.diffRoute(\n        newRoute,\n        oldRoute,\n        function (route, startRoute) {\n          instance.hook(\n            newRoute,\n            startRoute ? config.HOOK_BEFORE_ROUTE_ENTER : config.HOOK_BEFORE_ROUTE_UPDATE,\n            startRoute ? ROUTER_HOOK_BEFORE_ENTER : ROUTER_HOOK_BEFORE_UPDATE,\n            env.TRUE,\n            function () {\n\n              instance.route = newRoute\n              instance.location = location\n\n              instance.patchRoute(route, startRoute)\n\n            }\n          )\n        }\n      )\n    }\n\n    instance.hooks.setLocation(location, oldLocation)\n\n    if (oldRoute && oldLocation && location.path !== oldLocation.path) {\n      instance.hook(\n        oldRoute,\n        config.HOOK_BEFORE_ROUTE_LEAVE,\n        ROUTER_HOOK_BEFORE_LEAVE,\n        env.TRUE,\n        enterRoute\n      )\n      return\n    }\n\n    enterRoute()\n\n  }\n\n}\n\nconst default404 = {\n  path: '/404',\n  component: {\n    template: '<div>This is a default 404 page, please set \"route404\" for your own 404 page.</div>'\n  }\n},\n\ndirective = {\n  bind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n\n    // 当前组件如果是根组件，则没有 $root 属性\n    const $root = vnode.context.$root || vnode.context,\n\n    router = $root[ROUTER] as Router,\n\n    listener = vnode.data[directive.key] = function (_: CustomEventInterface) {\n      let { value, getter } = directive, target: any = value\n      if (value && getter && API.string.has(value as string, '{')) {\n        target = getter()\n      }\n      router[directive.name](target)\n    }\n\n    if (vnode.isComponent) {\n      (node as YoxInterface).on(EVENT_CLICK, listener)\n    }\n    else {\n      API.dom.on(node as HTMLElement, EVENT_CLICK, listener)\n    }\n\n  },\n  unbind(node: HTMLElement | YoxInterface, directive: Directive, vnode: VNode) {\n    const listener = vnode.data[directive.key]\n    if (vnode.isComponent) {\n      (node as YoxInterface).off(EVENT_CLICK, listener)\n    }\n    else {\n      API.dom.off(node as HTMLElement, EVENT_CLICK, listener)\n    }\n  },\n},\n\nRouterView: ComponentOptions = {\n  template: '<$' + ROUTE_COMPONENT + '/>',\n  beforeCreate(options) {\n\n    const context = options.context as YoxInterface,\n\n    route = context[ROUTE].child as LinkedRoute\n\n    if (route) {\n\n      context[ROUTE_VIEW] = this\n\n      const props = options.props = {}, components = options.components = {},\n\n      name = ROUTE_COMPONENT + (++guid)\n\n      props[ROUTE_COMPONENT] = name\n      components[name] = route.component\n\n    }\n\n  },\n  beforeDestroy() {\n    this.$context[ROUTE_VIEW] = env.UNDEFINED\n  }\n}\n\n/**\n * 版本\n */\nexport const version = process.env.NODE_VERSION\n\n/**\n * 安装插件\n */\nexport function install(Yox: API): void {\n\n  API = Yox\n\n  Yox.directive({\n    push: directive,\n    replace: directive,\n    go: directive,\n  })\n\n  Yox.component('router-view', RouterView)\n\n  hookEvents = {\n    'beforeCreate.hook': function (event: CustomEventInterface, data?: Data) {\n      if (data) {\n        let options = data as ComponentOptions, { context } = options\n        // 当前组件是 <router-view> 中的动态组件\n        if (context && context.$options.beforeCreate === RouterView.beforeCreate) {\n          // 找到渲染 <router-view> 的父级组件，它是一定存在的\n          context = context.$context as YoxInterface\n\n          const router = context[ROUTER] as Router,\n          route = context[ROUTE].child as LinkedRoute\n\n          if (route) {\n            const extensions = options.extensions = {}\n            extensions[ROUTER] = router\n            extensions[ROUTE] = route\n\n            if (router.location) {\n              options.props = filterProps(route, router.location, options)\n            }\n          }\n        }\n      }\n    },\n    'afterMount.hook': function (event: CustomEventInterface) {\n      updateRoute(\n        event.target as YoxInterface,\n        config.HOOK_AFTER_ROUTE_ENTER,\n        ROUTER_HOOK_AFTER_ENTER,\n        env.TRUE\n      )\n    },\n    'afterUpdate.hook': function (event: CustomEventInterface) {\n      updateRoute(\n        event.target as YoxInterface,\n        config.HOOK_AFTER_ROUTE_UPDATE,\n        ROUTER_HOOK_AFTER_UPDATE,\n        env.TRUE\n      )\n    },\n    'afterDestroy.hook': function (event: CustomEventInterface) {\n      updateRoute(\n        event.target as YoxInterface,\n        config.HOOK_AFTER_ROUTE_LEAVE,\n        ROUTER_HOOK_AFTER_LEAVE\n      )\n    }\n  }\n\n}\n"],"names":["const","env.RAW_TRUE","env.TRUE","env.RAW_FALSE","env.FALSE","env.RAW_NULL","env.NULL","parse","constant.SEPARATOR_QUERY","constant.SEPARATOR_PAIR","valueUtil.parse","constant.FLAG_ARRAY","stringify","valueUtil.stringify","constant.WINDOW","constant.LOCATION","constant.HISTORY","constant.SEPARATOR_PATH","start","stop","push","go","current","queryUtil.stringify","env.UNDEFINED","historyMode.isSupported","env.EMPTY_FUNCTION","queryUtil.parse","config.HOOK_BEFORE_ROUTE_ENTER","config.HOOK_BEFORE_ROUTE_UPDATE","config.HOOK_BEFORE_ROUTE_LEAVE","config.HOOK_AFTER_ROUTE_ENTER","config.HOOK_AFTER_ROUTE_UPDATE","config.HOOK_AFTER_ROUTE_LEAVE"],"mappings":";;;;;;;;;;;;EAAO,IAAM,MAAM,GAAG,MAAM,CAAA;AAE5B,EAAO,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAA;AACvC,EAAO,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAA;;AAGrC,EAAO,IAAM,YAAY,GAAG,GAAG,CAAA;;AAG/B,EAAO,IAAM,cAAc,GAAG,GAAG,CAAA;;AAGjC,EAAO,IAAM,gBAAgB,GAAG,GAAG,CAAA;;AAGnC,EAAO,IAAM,eAAe,GAAG,GAAG,CAAA;;AAGlC,EAAO,IAAM,cAAc,GAAG,GAAG,CAAA;;AAGjC,EAAO,IAAM,UAAU,GAAG,IAAI,CAAA;;AAG9B,EAAO,IAAM,wBAAwB,GAAG,aAAa,CAAA;;AAGrD,EAAO,IAAM,uBAAuB,GAAG,YAAY,CAAA;;AAGnD,EAAO,IAAM,yBAAyB,GAAG,cAAc,CAAA;;AAGvD,EAAO,IAAM,wBAAwB,GAAG,aAAa,CAAA;;AAGrD,EAAO,IAAM,wBAAwB,GAAG,aAAa,CAAA;;AAGrD,EAAO,IAAM,uBAAuB,GAAG,YAAY,CAAA;;;ACAnD,EAAOA,IAAM,uBAAuB,GAAG,mBAAkB;AACzD,EAAOA,IAAM,sBAAsB,GAAG,kBAAiB;AACvD,EAAOA,IAAM,wBAAwB,GAAG,oBAAmB;AAC3D,EAAOA,IAAM,uBAAuB,GAAG,mBAAkB;AACzD,EAAOA,IAAM,uBAAuB,GAAG,mBAAkB;AACzD,EAAOA,IAAM,sBAAsB,GAAG,iBAAiB;;EC5CvD;;;AAGA,EAAOA,IAAM,IAAI,GAAG,KAAI;AACxB,EAAOA,IAAM,KAAK,GAAG,MAAK;AAC1B,EAAOA,IAAM,IAAI,GAAG,KAAI;AACxB,EAAOA,IAAM,SAAS,GAAG,KAAK,EAAC;AAC/B;AAEA,EAAOA,IAAM,QAAQ,GAAG,OAAM;AAC9B,EAAOA,IAAM,SAAS,GAAG,QAAO;AAChC,EAAOA,IAAM,QAAQ,GAAG,OAAM;AAC9B;;;;AA0EA,EAAOA,IAAM,cAAc,GAAG,YAAY;;IAEzC;;;;;AAKD,EAAOA,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAC;;;;;AAK7C,EAAOA,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;;ECtF5C;MAAA;OA8CC;MAtCC,2BAAW,GAAX,UAAY,EAAY,EAAE,IAAqB;UAC7C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAA;UACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;UAChB,OAAO,IAAI,CAAA;OACZ;MAED,qBAAK,GAAL;UACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAA;UACd,OAAO,IAAI,CAAA;OACZ;MAED,mBAAG,GAAH,UAAI,IAAqB,EAAE,GAAQ;UACzB,IAAA,gBAAI,CAAS;UACrB,IAAI,IAAI,EAAE;cACR,IAAI,CAAC,IAAI,CAAC;kBACR,EAAE,EAAE,IAAI;kBACR,GAAG,KAAA;eACJ,CAAC,CAAA;WACH;UACD,OAAO,IAAI,CAAA;OACZ;MAED,oBAAI,GAAJ,UAAK,IAAc,EAAE,OAAiB,EAAE,QAAmB;UACzD,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;UAC9B,IAAI,IAAI,EAAE;cACR,IAAI,OAAO,EAAE;kBACX,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;eACjD;mBACI;kBACH,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;kBAC1C,IAAI,EAAE,CAAA;eACP;WACF;eACI,IAAI,QAAQ,EAAE;cACjB,QAAQ,EAAE,CAAA;WACX;OACF;MAEH,YAAC;GAAA,IAAA;;;;;ACnDD,WAAgB,KAAK,CAAC,GAAQ,EAAE,KAAa;MAC3C,IAAI,MAAW,CAAA;MACf,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;UACzB,MAAM,GAAG,CAAC,KAAK,CAAA;OAChB;WACI,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;UAC7B,IAAI,KAAK,KAAKC,QAAY,EAAE;cAC1B,MAAM,GAAGC,IAAQ,CAAA;WAClB;eACI,IAAI,KAAK,KAAKC,SAAa,EAAE;cAChC,MAAM,GAAGC,KAAS,CAAA;WACnB;eACI,IAAI,KAAK,KAAKC,QAAY,EAAE;cAC/B,MAAM,GAAGC,IAAQ,CAAA;WAClB;eACI;cACH,MAAM,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAA;WACnC;OACF;MACD,OAAO,MAAM,CAAA;GACd;AAED,WAAgB,SAAS,CAAC,GAAQ,EAAE,KAAU;MAC5C,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;UACxB,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAA;OACjC;WACI,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;UACtD,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAA;OACxB;WACI,IAAI,KAAK,KAAKA,IAAQ,EAAE;UAC3B,OAAOD,QAAY,CAAA;OACpB;GACF;;;;;AC/BD,WAAgBE,OAAK,CAAC,GAAQ,EAAE,KAAa;MAC3C,IAAI,MAA0B,CAAA;MAC9B,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,KAAK,CAAC,KAAK,CAACC,eAAwB,CAAC,EACrC,UAAU,IAAI;UAEZ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAACC,cAAuB,CAAC,EAE/C,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAE/B,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;UAEhB,IAAI,GAAG,EAAE;cACP,IAAI,CAAC,MAAM,EAAE;kBACX,MAAM,GAAG,EAAE,CAAA;eACZ;cACD,KAAK,GAAGC,KAAe,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;cACnC,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAEC,UAAmB,CAAC,EAAE;kBACjD,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAACA,UAAmB,CAAC,MAAM,CAAC,CAAA;kBAC3D,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EACjC,KAAK,CACN,CAAA;eACF;mBACI;kBACH,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;eACpB;WACF;OAEF,CACF,CAAA;MACD,OAAO,MAAM,CAAA;GACd;;;;AAKD,WAAgBC,WAAS,CAAC,GAAQ,EAAE,KAAa;MAC/C,IAAM,MAAM,GAAa,EAAE,CAAA;8BAClB,GAAG;UACV,IAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;UACxB,IAAI,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;cACvB,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,KAAK,EACL,UAAU,KAAK;kBACb,IAAM,GAAG,GAAGC,SAAmB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;kBAC3C,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;sBACtB,MAAM,CAAC,IAAI,CACT,GAAG,GAAGF,UAAmB,GAAGF,cAAuB,GAAG,GAAG,CAC1D,CAAA;mBACF;eACF,CACF,CAAA;WACF;eACI;cACH,IAAM,GAAG,GAAGI,SAAmB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;cAC3C,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;kBACtB,MAAM,CAAC,IAAI,CACT,GAAG,GAAGJ,cAAuB,GAAG,GAAG,CACpC,CAAA;eACF;WACF;;MAtBH,KAAK,IAAI,GAAG,IAAI,KAAK;kBAAZ,GAAG;OAuBX;MACD,OAAO,MAAM,CAAC,IAAI,CAACD,eAAwB,CAAC,CAAA;GAC7C;;;ECzDD,IAAM,WAAW,GAAG,IAAI,EAExB,WAAW,GAAG,YAAY,CAAA;AAE1B,WAAgB,KAAK,CAAC,MAAc,EAAE,OAAiB;MACrD,MAAM,CAAC,EAAE,CAACM,MAAe,EAAE,WAAW,EAAE,OAAmB,CAAC,CAAA;MAC5D,OAAO,EAAE,CAAA;GACV;AAED,WAAgB,IAAI,CAAC,MAAc,EAAE,OAAiB;MACpD,MAAM,CAAC,GAAG,CAACA,MAAe,EAAE,WAAW,EAAE,OAAmB,CAAC,CAAA;GAC9D;AAED,WAAgB,IAAI,CAAC,QAAkB,EAAE,OAAiB;MACxDC,QAAiB,CAAC,IAAI,GAAG,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAA;GACpD;AAED,WAAgB,EAAE,CAAC,CAAS;MAC1BC,OAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;GACvB;AAED,WAAgB,OAAO;;;MAIrB,IAAM,IAAI,GAAGD,QAAiB,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;MAEtE,OAAO,KAAK,GAAG,CAAC;YACZ,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;YACvCE,cAAuB,CAAA;GAE5B;;;;;;;;;;EChCD,IAAM,SAAS,GAAG,UAAU,CAAA;AAE5B,EAAO,IAAM,WAAW,GAAG,WAAW,IAAID,OAAgB,CAAA;AAE1D,WAAgBE,OAAK,CAAC,MAAc,EAAE,OAAiB;MACrD,MAAM,CAAC,EAAE,CAACJ,MAAe,EAAE,SAAS,EAAE,OAAmB,CAAC,CAAA;MAC1D,OAAO,EAAE,CAAA;GACV;AAED,WAAgBK,MAAI,CAAC,MAAc,EAAE,OAAiB;MACpD,MAAM,CAAC,GAAG,CAACL,MAAe,EAAE,SAAS,EAAE,OAAmB,CAAC,CAAA;GAC5D;AAED,WAAgBM,MAAI,CAAC,QAAkB,EAAE,OAAiB;;;MAGxDJ,OAAgB,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAA;MAChD,OAAO,EAAE,CAAA;GACV;AAED,WAAgBK,IAAE,CAAC,CAAS;MAC1BL,OAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;GACvB;AAED,WAAgBM,SAAO;MACrB,OAAOP,QAAiB,CAAC,QAAQ,GAAGA,QAAiB,CAAC,MAAM,CAAA;GAC7D;;;;;;;;;;;ECuBD,IAAI,GAAQ,EAAE,UAAoC,EAAE,IAAI,GAAG,CAAC,CAAA;EAE5D,IAAM,MAAM,GAAG,SAAS,EAExB,KAAK,GAAG,QAAQ,EAEhB,UAAU,GAAG,YAAY,EAEzB,eAAe,GAAG,gBAAgB,EAElC,WAAW,GAAG,OAAO,CAAA;;;;EAKrB,SAAS,UAAU,CAAC,IAAY,EAAE,UAAyB;;MAGzD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;;UAEhD,IAAI,UAAU,EAAE;cACd,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,cAAc,CAAC,EAAE;kBACpD,UAAU,IAAI,cAAc,CAAA;eAC7B;WACF;eACI;cACH,UAAU,GAAG,cAAc,CAAA;WAC5B;UACD,IAAI,GAAG,UAAU,GAAG,IAAI,CAAA;OACzB;;MAGD,IAAI,IAAI,KAAK,cAAc;aACtB,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAC,EAC5C;UACA,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;OACzD;MAED,OAAO,IAAI,CAAA;GAEZ;;;;EAKD,SAAS,YAAY,CAAC,IAAY,EAAE,MAAmB,EAAE,KAAkB;MAEzE,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;UAExB,IAAM,OAAK,GAAa,EAAE,CAAA;UAE1B,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAC1B,UAAU,IAAI;cACZ,OAAK,CAAC,IAAI,CACR,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,MAAM;oBAC/C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,CACT,CAAA;WACF,CACF,CAAA;UAED,IAAI,GAAG,OAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;OAElC;MAED,IAAI,KAAK,EAAE;UACT,IAAM,QAAQ,GAAGQ,WAAmB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;UAChD,IAAI,QAAQ,EAAE;cACZ,IAAI,IAAI,gBAAgB,GAAG,QAAQ,CAAA;WACpC;OACF;MAED,OAAO,IAAI,CAAA;GAEZ;EAED,SAAS,KAAK,CAAC,MAAc,EAAE,SAAe;MAE5C,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;UACzB,OAAO,UAAU,CAAC,MAAgB,CAAC,CAAA;OACpC;MAED,IAAI,KAAK,GAAG,MAAqB,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAY,CAAA;MAClE,IAAI,IAAI,EAAE;UACR,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAA;UACtB,AAA4C;cAC1C,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;kBACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAqB,IAAI,oBAAiB,CAAC,CAAA;eAC7D;WACF;OACF;WACI;UACH,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAc,CAAC,CAAA;OACxC;MAED,OAAO,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;GAErD;;;;;;;EAQD,SAAS,WAAW,CAAC,KAAkB,EAAE,QAAkB,EAAE,OAAyB;MACpF,IAAM,MAAM,GAAS,EAAE,EAAE,SAAS,GAAG,OAAO,CAAC,SAAS,CAAA;MACtD,IAAI,SAAS,EAAE;UAEb,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAE1B,WAAW,GAAG,KAAK,CAAC,MAAM,EAE1B,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAA;;UAGhC,IAAI,WAAW,IAAI,cAAc,EAAE;cACjC,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;cAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;kBAC3D,KAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;eACjE;WACF;UAED,IAAI,KAAK,EAAE;cACT,KAAK,IAAI,GAAG,IAAI,SAAS,EAAE;kBACzB,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;kBACtB,IAAI,KAAK,KAAKC,SAAa,EAAE;sBAC3B,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;mBACpB;eACF;WACF;OAEF;MACD,OAAO,MAAM,CAAA;GACd;;;;;EAMD,SAAS,WAAW,CAAC,KAAkB;MACrC,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;MACzB,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAA;GAChC;EAED,SAAS,WAAW,CAAC,QAAsB,EAAE,iBAAgC,EAAE,QAA4B,EAAE,MAAgB;MAC3H,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAgB,CAAA;MAC5C,IAAI,KAAK,EAAE;UACT,KAAK,CAAC,OAAO,GAAG,MAAM,GAAG,QAAQ,GAAGA,SAAa,CAAA;UACjD,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;cACtB,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAW,CAAA;cACzC,IAAI,iBAAiB,IAAI,QAAQ,EAAE;kBACjC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAA;eAChD;cACD,IAAI,MAAM,EAAE;kBACF,IAAA,wBAAO,CAAW;kBAC1B,IAAI,OAAO,EAAE;sBACX,OAAO,CAAC,UAAU,EAAE,CAAA;sBACpB,MAAM,CAAC,OAAO,GAAGA,SAAa,CAAA;mBAC/B;eACF;WACF;OACF;GACF;AAED;MAkCE,gBAAY,OAAsB;UAEhC,IAAM,QAAQ,GAAG,IAAI,EAAE,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,UAAU,CAAA;UAEjF,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAA;UAE1B,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC3B,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAY,CAAY;gBACrC,EAAa,CAAA;UAEjB,AAA4C;cAC1C,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;kBAChB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAA;kBAChD,OAAM;eACP;WACF;UAED,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,KAAK,SAAS,IAAIC,WAAuB,GAAG,WAAW,GAAG,QAAQ,CAAA;UAE9F,QAAQ,CAAC,OAAO,GAAG;cAEX,IAAA,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,EAAI,0BAAO,CAAa;cAE3D,IAAI,OAAO,EAAE;kBACH,IAAA,2BAAQ,CAAY;;kBAE5B,IAAI,QAAQ,CAAC,GAAG,KAAK,GAAG,EAAE;sBACxB,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAA;sBAC7C,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;sBAC3B,OAAM;mBACP;kBACD,QAAQ,CAAC,OAAO,GAAGD,SAAa,CAAA;eACjC;;cAGD,QAAQ,CAAC,aAAa,CACpB,GAAG,EACH,UAAU,QAAQ;kBAChB,IAAI,QAAQ,EAAE;sBACZ,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;sBAC7B,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;mBAC5B;uBACI;sBACH,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;mBACjC;eACF,CACF,CAAA;WACF,CAAA;UAED,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAA;UACpB,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAA;UACvB,QAAQ,CAAC,UAAU,GAAG,EAAE,CAAA;UAExB,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAA;UACrB,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;UAEpB,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAA;UAE5B,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,OAAO,CAAC,MAAM,EACd,UAAU,KAAK;cACb,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;WACpB,CACF,CAAA;UAED,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;OAE9C;;;;MAKD,oBAAG,GAAH,UAAI,YAA0B;UAE5B,IAAM,QAAQ,GAAG,IAAI,EAErB,SAAS,GAAkB,EAAE,EAE7B,SAAS,GAAa,EAAE,EAExB,UAAU,GAAkB,EAAE,EAE9B,QAAQ,GAAG,UAAU,YAA0B;cAEvC,IAAA,wBAAI,EAAE,kCAAS,EAAE,gCAAQ,EAAE,wBAAI,EAErC,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAEtC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAExC,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,EAEhD,KAAK,GAAgB,EAAE,IAAI,MAAA,EAAE,KAAK,EAAE,YAAY,EAAE,EAElD,MAAM,GAAa,EAAE,CAAA;cAErB,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAC1B,UAAU,IAAI;kBACZ,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE;sBAC7C,MAAM,CAAC,IAAI,CACT,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CACjC,CAAA;mBACF;eACF,CACF,CAAA;cAED,IAAI,MAAM,CAAC,MAAM,EAAE;kBACjB,KAAK,CAAC,MAAM,GAAG,MAAM,CAAA;eACtB;cAED,IAAI,IAAI,EAAE;kBACR,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;eAClB;;cAGD,IAAI,SAAS,EAAE;kBACb,KAAK,CAAC,SAAS,GAAG,SAAS,CAAA;eAC5B;mBACI,IAAI,IAAI,EAAE;kBACb,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;eAClB;cAED,IAAI,WAAW,EAAE;kBACf,KAAK,CAAC,MAAM,GAAG,WAAW,CAAA;eAC3B;cAED,IAAI,QAAQ,EAAE;kBACZ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;kBACpB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;kBACtB,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,QAAQ,EACR,QAAQ,CACT,CAAA;kBACD,UAAU,CAAC,GAAG,EAAE,CAAA;kBAChB,SAAS,CAAC,GAAG,EAAE,CAAA;eAChB;mBACI;kBAEH,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;kBACrB,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;kBAE3B,IAAI,IAAI,EAAE;sBACR,AAA4C;0BAC1C,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE;8BAC5C,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAQ,IAAI,+BAA4B,CAAC,CAAA;8BAC1D,OAAM;2BACP;uBACF;sBACD,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;mBAChC;kBAED,AAA4C;sBAC1C,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE;0BAC7C,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,WAAS,IAAI,+BAA4B,CAAC,CAAA;0BAC3D,OAAM;uBACP;mBACF;kBAED,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAA;eAElC;WAEF,CAAA;UAED,QAAQ,CAAC,YAAY,CAAC,CAAA;UAEtB,OAAO,SAAS,CAAA;OAEjB;;;;MAKD,uBAAM,GAAN,UAAO,KAAkB;UAEvB,IAAM,QAAQ,GAAG,IAAI,CAAA;UAErB,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;UAExC,IAAI,KAAK,CAAC,IAAI,EAAE;cACd,OAAO,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;WACtC;UAED,OAAO,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;OAEvC;;;;;;;;;;;;;;;;;;;;;;;MAwBD,qBAAI,GAAJ,UAAK,MAAc;UAEX,IAAA,QAAQ,GAAG,IAAI,EAAI,oBAAI,CAAa;UAE1C,QAAQ,CAAC,MAAM,CACb,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,EACjCE,cAAkB,EAClBA,cAAkB,EAClB,UAAU,QAAQ,EAAE,OAAO;cACzB,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAA;cAC1B,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,QAAQ,CAAC,GAAG,EAAE;kBACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAA;eACtC;mBACI;kBACH,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;eAC5B;WACF,CACF,CAAA;OAEF;;;;MAKD,wBAAO,GAAP,UAAQ,MAAc;UAEpB,IAAM,QAAQ,GAAG,IAAI,CAAA;UAErB,QAAQ,CAAC,MAAM,CACb,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,EACjC;cACE,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAoB,CAAC,CAAA;WACvD,EACDA,cAAkB,EAClB,UAAU,QAAQ,EAAE,OAAO;cACzB,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAA;cAC1B,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;WAC5B,CACF,CAAA;OAEF;;;;MAKD,mBAAE,GAAF,UAAG,CAAS;UAEV,IAAM,QAAQ,GAAG,IAAI,EAEnB,oBAAI,EAEN,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAE5B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;UAEnC,IAAI,QAAQ,EAAE;cACZ,QAAQ,CAAC,MAAM,CACb,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,EAC5DA,cAAkB,EAClBA,cAAkB,EAClB,UAAU,QAAQ,EAAE,OAAO;kBACzB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAA;kBACvB,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAA;kBAE1B,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,QAAQ,CAAC,GAAG,EAAE;sBACnC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;mBACX;uBACI;sBACH,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;sBACrC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;mBAC5B;eACF,CACF,CAAA;WACF;OAEF;;;;MAKD,sBAAK,GAAL;UACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;OACvC;;;;MAKD,qBAAI,GAAJ;UACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;OACtC;;;;MAKD,qBAAI,GAAJ,UAAK,KAAkB,EAAE,aAAqB,EAAE,IAAY,EAAE,OAAiB,EAAE,QAAmB;UAE5F,IAAA,QAAQ,GAAG,IAAI,EAAI,4BAAQ,EAAE,sBAAK,EAAE,0BAAO,CAAa;UAE9D,KAAK;eACF,KAAK,EAAE;;eAEP,GAAG,CAAE,KAAK,CAAC,SAA8B,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC;;eAExE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC;;eAEnC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAA;UAExC,IAAM,IAAI,GAAG,UAAU,KAAsB;cAC3C,IAAI,KAAK,KAAKF,SAAa,EAAE;kBAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;eACpC;mBACI;;;kBAGH,IAAI,OAAO,EAAE;sBACX,OAAO,CAAC,OAAO,EAAE,CAAA;sBACjB,QAAQ,CAAC,OAAO,GAAGA,SAAa,CAAA;mBACjC;kBACD,IAAI,KAAK,KAAKpB,KAAS,EAAE;sBACvB,IAAI,QAAQ,EAAE;0BACZ,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;uBACxB;mBACF;uBACI;;sBAEH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;mBACrB;eACF;WACF,CAAA;UAED,IAAI,EAAE,CAAA;OAEP;MAEO,2BAAU,GAAlB,UAAmB,QAAkB,EAAE,KAAoB;UAEnD,IAAA,SAA0B,EAAxB,oBAAO,EAAE,kBAAe,CAAA;;UAGhC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;cACzB,KAAK,GAAG,MAAM,GAAG,CAAC,CAAA;;;cAGlB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;kBAClB,OAAO,CAAC,MAAM,GAAG,KAAK,CAAA;eACvB;WACF;UAED,OAAO,CAAC,KAAe,CAAC,GAAG,QAAQ,CAAA;UAEnC,IAAI,CAAC,MAAM,GAAG,KAAe,CAAA;OAE9B;MAEO,+BAAc,GAAtB,UAAuB,QAAkB;UACjC,IAAA,SAA0B,EAAxB,oBAAO,EAAE,kBAAe,CAAA;UAChC,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;cACnB,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAA;WAC3B;OACF;MAEO,uBAAM,GAAd,UACE,GAAW,EACX,UAAoB,EACpB,OAAiB,EACjB,QAAwD;;UAIxD,IAAM,QAAQ,GAAG,IAAI,CAAA;UAErB,QAAQ,CAAC,aAAa,CACpB,GAAG,EACH,UAAU,QAAQ;cAEhB,IAAI,QAAQ,EAAE;kBACZ,QAAQ,CACN,QAAQ,EACR;sBACE,QAAQ,UAAA;sBACR,UAAU,YAAA;sBACV,OAAO,SAAA;mBACR,CACF,CAAA;eACF;mBACI,AAA4C;kBAC/C,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAI,GAAG,4BAAwB,CAAC,CAAA;eAClD;WAEF,CACF,CAAA;OAEF;MAEO,8BAAa,GAArB,UAAsB,GAAW,EAAE,QAAuC;UAExE,IAAI,QAAgB,EAAE,MAAqB,EAAE,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAA;UAElF,IAAI,KAAK,IAAI,CAAC,EAAE;cACd,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;cAC9B,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;WAC9B;eACI;cACH,QAAQ,GAAG,GAAG,CAAA;WACf;;UAGD,IAAM,QAAQ,GAAG,IAAI,EAErB,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,EAE9C,MAAM,GAAG,aAAa,CAAC,MAAM,EAE7B,UAAU,GAAG,UACX,MAAqB,EACrB,QAAsD;cAGtD,IAAI,KAAK,GAAG,CAAC,EAAE,KAAyB,CAAA;cAExC,IAAI,EAAE,OAAO,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;kBACpC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;;kBAGvB,IAAI,KAAK,CAAC,MAAM,EAAE;sBAChB,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;;sBAE5C,IAAI,MAAM,KAAK,SAAS,CAAC,MAAM,EAAE;0BAC/B,IAAM,MAAM,GAAS,EAAE,CAAA;0BACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;8BAC/B,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE;kCACrD,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAGM,KAAe,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAA;+BAC1F;;mCAEI,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC,EAAE;kCAC1C,SAAS,IAAI,CAAA;+BACd;2BACF;0BACD,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;0BACvB,OAAM;uBACP;mBACF;;uBAEI,IAAI,KAAK,CAAC,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE;sBAC5D,IAAM,aAAa,GAAkB,UAAU,SAAS;0BACtD,QAAQ,CAAC,MAAM,CAAC,KAAoB,CAAC,CAAA;0BACrC,UAAU,CACR,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,EAC/C,QAAQ,CACT,CAAA;uBACF,CAAA;sBACD,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;sBACzC,IAAI,OAAO,EAAE;0BACX,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;uBAC5B;sBACD,OAAM;mBACP;uBACI,IAAI,IAAI,KAAK,QAAQ,EAAE;sBAC1B,QAAQ,CAAC,KAAK,CAAC,CAAA;sBACf,OAAM;mBACP;eACF;cAED,QAAQ,EAAE,CAAA;WAEX,CAAA;UAED,UAAU,CACR,QAAQ,CAAC,MAAM,EACf,UAAU,KAAK,EAAE,MAAM;cACrB,IAAI,KAAK,EAAE;kBACT,IAAM,QAAQ,GAAa;sBACzB,GAAG,KAAA;sBACH,IAAI,EAAE,KAAK,CAAC,IAAI;mBACjB,CAAA;kBACD,IAAI,MAAM,EAAE;sBACV,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAA;mBACzB;kBACD,IAAI,MAAM,EAAE;sBACV,IAAM,KAAK,GAAGiB,OAAe,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;sBAC1C,IAAI,KAAK,EAAE;0BACT,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAA;uBACvB;mBACF;kBACD,QAAQ,CAAC,QAAQ,CAAC,CAAA;eACnB;mBACI;kBACH,QAAQ,EAAE,CAAA;eACX;WACF,CACF,CAAA;OAEF;MAEO,0BAAS,GAAjB,UACE,KAAkB,EAClB,QAA4B,EAC5B,UAAwE,EACxE,UAA8B,EAC9B,UAA8B,EAC9B,WAA+B;;UAI/B,IAAI,UAAU,EAAE;cACd,KAAK,CAAC,KAAK,GAAG,UAAU,CAAA;cACxB,UAAU,CAAC,MAAM,GAAG,KAAK,CAAA;WAC1B;UAED,IAAI,QAAQ,EAAE;;cAEZ,IAAI,QAAQ,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,EAAE;kBAC1C,UAAU,GAAG,KAAK,CAAA;eACnB;mBACI;;kBAEH,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAA;eACjC;WACF;eACI;cACH,UAAU,GAAG,KAAK,CAAA;WACnB;UAED,IAAI,KAAK,CAAC,MAAM,EAAE;cAChB,IAAI,CAAC,SAAS,CACZ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAC7B,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAGH,SAAa,EAC1C,UAAU,EACV,UAAU,EACV,KAAK,EACL,QAAQ,IAAI,WAAW,CACxB,CAAA;cACD,OAAM;WACP;;UAGD,IAAI,UAAU,KAAK,KAAK,EAAE;cACxB,IAAI,OAAO,SAAqB,CAAA;;cAEhC,IAAI,QAAQ,EAAE;kBACZ,OAAO,QAAQ,EAAE;sBACf,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAA;sBAC1B,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAA;mBAC3B;eACF;;mBAEI,IAAI,WAAW,EAAE;kBACpB,OAAO,GAAG,WAAW,CAAC,OAAO,CAAA;eAC9B;cACD,IAAI,OAAO,EAAE;kBACX,UAAU,CAAC,OAAO,GAAG,OAAO,CAAA;eAC7B;WACF;;UAGD,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;OAE9B;MAEO,2BAAU,GAAlB,UACE,KAAkB,EAClB,UAA8B;UAG9B,IAAM,QAAQ,GAAG,IAAI,EAAE,QAAQ,GAAG,QAAQ,CAAC,QAAoB,CAAA;;UAG/D,OAAO,KAAK,EAAE;cAEN,IAAA,qBAAM,EAAE,uBAAO,EAAE,2BAAS,CAAU;cAE1C,IAAI,KAAK,KAAK,UAAU,EAAE;kBAExB,IAAI,MAAM,EAAE;sBAEV,OAAO,GAAG,MAAM,CAAC,OAAuB,CAAA;sBACxC,OAAO,CAAC,WAAW,CACjB,WAAW,CACT,MAAM,EACN,QAAQ,EACR,MAAM,CAAC,SAA6B,CACrC,CACF,CAAA;sBAED,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;sBAC7B,IAAI,OAAO,EAAE;0BACX,IAAM,KAAK,GAAG,EAAE,EAAE,IAAI,GAAG,eAAe,IAAI,EAAE,IAAI,CAAC,CAAA;0BACnD,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI,CAAA;0BAC7B,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;0BAClC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;uBAC3B;mBAEF;uBACI;sBAEH,IAAI,OAAO,EAAE;0BACX,OAAO,CAAC,OAAO,EAAE,CAAA;uBAClB;;sBAGD,IAAM,UAAU,GAAG,EAAE,CAAA;sBACrB,UAAU,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAA;sBAC7B,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAA;sBAEzB,IAAM,OAAO,GAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,CACjD;0BACE,EAAE,EAAE,QAAQ,CAAC,EAAE;0BACf,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,SAA6B,CAAC;0BAClE,UAAU,YAAA;uBACX,EACD,SAA6B,CAC9B,CAAA;sBAED,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;4BAC3B,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC;4BAC7C,UAAU,CAAA;sBAEd,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAA;mBAEjC;eAEF;mBAEI,IAAI,OAAO,EAAE;kBAChB,IAAI,OAAO,CAAC,MAAM,EAAE;sBAClB,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAA;sBACtB,OAAO,CAAC,WAAW,CACjB,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,SAA6B,CAAC,CAC5D,CAAA;mBACF;uBACI;sBACH,KAAK,CAAC,OAAO,GAAGA,SAAa,CAAA;mBAC9B;kBACD,IAAI,KAAK,CAAC,KAAK,EAAE;sBACf,KAAK,GAAG,KAAK,CAAC,KAAoB,CAAA;sBAClC,SAAQ;mBACT;eACF;cACD,MAAK;WACN;OACF;MAEO,yBAAQ,GAAhB,UAAiB,QAAkB;UAEjC,IAAI,QAAQ,GAAG,IAAI,EAEnB,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAEhD,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAA;UAErC,IAAI,QAAQ,EAAE;cACZ,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;kBACzB,QAAQ,GAAI,QAAqB,CAAC,QAAQ,CAAC,CAAA;eAC5C;cACD,IAAI,QAAQ,EAAE;kBACZ,QAAQ,CAAC,IAAI,CAAC,QAAkB,CAAC,CAAA;kBACjC,OAAM;eACP;WACF;UAED,IAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAE7C,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAEzB,WAAW,GAAG,QAAQ,CAAC,QAAQ,EAE/B,UAAU,GAAG;cACX,QAAQ,CAAC,SAAS,CAChB,QAAQ,EACR,QAAQ,EACR,UAAU,KAAK,EAAE,UAAU;kBACzB,QAAQ,CAAC,IAAI,CACX,QAAQ,EACR,UAAU,GAAGI,uBAA8B,GAAGC,wBAA+B,EAC7E,UAAU,GAAG,wBAAwB,GAAG,yBAAyB,EACjE3B,IAAQ,EACR;sBAEE,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAA;sBACzB,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAA;sBAE5B,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;mBAEvC,CACF,CAAA;eACF,CACF,CAAA;WACF,CAAA;UAED,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAA;UAEjD,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,EAAE;cACjE,QAAQ,CAAC,IAAI,CACX,QAAQ,EACR4B,uBAA8B,EAC9B,wBAAwB,EACxB5B,IAAQ,EACR,UAAU,CACX,CAAA;cACD,OAAM;WACP;UAED,UAAU,EAAE,CAAA;OAEb;MAEH,aAAC;GAAA,IAAA;EAED,IAAM,UAAU,GAAG;MACjB,IAAI,EAAE,MAAM;MACZ,SAAS,EAAE;UACT,QAAQ,EAAE,qFAAqF;OAChG;GACF,EAED,SAAS,GAAG;MACV,IAAI,EAAJ,UAAK,IAAgC,EAAE,SAAoB,EAAE,KAAY;;UAGvE,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,EAElD,MAAM,GAAG,KAAK,CAAC,MAAM,CAAW,EAEhC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,UAAU,CAAuB;cAChE,IAAA,uBAAK,EAAE,yBAAM,EAAgB,MAAM,GAAQ,KAAK,CAAA;cACtD,IAAI,KAAK,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAe,EAAE,GAAG,CAAC,EAAE;kBAC3D,MAAM,GAAG,MAAM,EAAE,CAAA;eAClB;cACD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAA;WAC/B,CAAA;UAED,IAAI,KAAK,CAAC,WAAW,EAAE;cACpB,IAAqB,CAAC,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;WACjD;eACI;cACH,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAmB,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAA;WACvD;OAEF;MACD,MAAM,EAAN,UAAO,IAAgC,EAAE,SAAoB,EAAE,KAAY;UACzE,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;UAC1C,IAAI,KAAK,CAAC,WAAW,EAAE;cACpB,IAAqB,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;WAClD;eACI;cACH,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAmB,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAA;WACxD;OACF;GACF,EAED,UAAU,GAAqB;MAC7B,QAAQ,EAAE,IAAI,GAAG,eAAe,GAAG,IAAI;MACvC,YAAY,EAAZ,UAAa,OAAO;UAElB,IAAM,OAAO,GAAG,OAAO,CAAC,OAAuB,EAE/C,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,KAAoB,CAAA;UAE3C,IAAI,KAAK,EAAE;cAET,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAA;cAE1B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,EAAE,EAAE,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,EAAE,EAEtE,IAAI,GAAG,eAAe,IAAI,EAAE,IAAI,CAAC,CAAA;cAEjC,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI,CAAA;cAC7B,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,CAAA;WAEnC;OAEF;MACD,aAAa;UACX,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAGsB,SAAa,CAAA;OAC1C;GACF,CAAA;;;;AAKD,MAAa,OAAO,GAAG,eAAwB,CAAA;;;;AAK/C,WAAgB,OAAO,CAAC,GAAQ;MAE9B,GAAG,GAAG,GAAG,CAAA;MAET,GAAG,CAAC,SAAS,CAAC;UACZ,IAAI,EAAE,SAAS;UACf,OAAO,EAAE,SAAS;UAClB,EAAE,EAAE,SAAS;OACd,CAAC,CAAA;MAEF,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,UAAU,CAAC,CAAA;MAExC,UAAU,GAAG;UACX,mBAAmB,EAAE,UAAU,KAA2B,EAAE,IAAW;cACrE,IAAI,IAAI,EAAE;kBACJ,IAAA,OAAO,GAAG,IAAwB,EAAI,yBAAO,CAAY;;kBAE7D,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,KAAK,UAAU,CAAC,YAAY,EAAE;;sBAExE,OAAO,GAAG,OAAO,CAAC,QAAwB,CAAA;sBAE1C,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAW,EACxC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,KAAoB,CAAA;sBAE3C,IAAI,KAAK,EAAE;0BACT,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,EAAE,CAAA;0BAC1C,UAAU,CAAC,MAAM,CAAC,GAAG,MAAM,CAAA;0BAC3B,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAA;0BAEzB,IAAI,MAAM,CAAC,QAAQ,EAAE;8BACnB,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;2BAC7D;uBACF;mBACF;eACF;WACF;UACD,iBAAiB,EAAE,UAAU,KAA2B;cACtD,WAAW,CACT,KAAK,CAAC,MAAsB,EAC5BO,sBAA6B,EAC7B,uBAAuB,EACvB7B,IAAQ,CACT,CAAA;WACF;UACD,kBAAkB,EAAE,UAAU,KAA2B;cACvD,WAAW,CACT,KAAK,CAAC,MAAsB,EAC5B8B,uBAA8B,EAC9B,wBAAwB,EACxB9B,IAAQ,CACT,CAAA;WACF;UACD,mBAAmB,EAAE,UAAU,KAA2B;cACxD,WAAW,CACT,KAAK,CAAC,MAAsB,EAC5B+B,sBAA6B,EAC7B,uBAAuB,CACxB,CAAA;WACF;OACF,CAAA;GAEF;;;;;;;;;;;;;;"}